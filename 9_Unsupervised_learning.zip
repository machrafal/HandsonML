{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2d88ff67-a895-4fad-82c3-3bd1c77b71c7",
   "metadata": {},
   "source": [
    "# Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0a180da5-460c-4051-8c32-43b02aa77d52",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "assert sys.version_info >= (3, 5)\n",
    "\n",
    "import sklearn\n",
    "assert sklearn.__version__ >= \"0.20\"\n",
    "\n",
    "import numpy as np\n",
    "import os\n",
    "\n",
    "np.random.seed(100)\n",
    "\n",
    "%matplotlib inline\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "mpl.rc('axes', labelsize=14)\n",
    "mpl.rc('xtick', labelsize=12)\n",
    "mpl.rc('ytick', labelsize=12)\n",
    "\n",
    "PROJECT_ROOT_DIR = \".\"\n",
    "CHAPTER_ID = \"unsupervised_learning\"\n",
    "IMAGES_PATH = os.path.join(PROJECT_ROOT_DIR, \"images\", CHAPTER_ID)\n",
    "os.makedirs(IMAGES_PATH, exist_ok=True)\n",
    "\n",
    "def save_fig(fig_id, tight_layout=True, fig_extension=\"png\", resolution=300):\n",
    "    path = os.path.join(IMAGES_PATH, fig_id + \".\" + fig_extension)\n",
    "    print(\"Saving figure\", fig_id)\n",
    "    if tight_layout:\n",
    "        plt.tight_layout()\n",
    "    plt.savefig(path, format=fig_extension, dpi=resolution)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2d23c60-1296-48d1-8bd0-d213e4f9a43f",
   "metadata": {},
   "source": [
    "# Clustering"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee2f2e98-6b6b-45f1-a778-acb73c32dfdd",
   "metadata": {},
   "source": [
    "**Introduction â€“ Classification _vs_ Clustering**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "78b635d2-08c4-45e9-b1b2-0a12c10d246f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import load_iris"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c1bf20cf-42c3-434b-a1d1-d114e2c2426c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['setosa', 'versicolor', 'virginica'], dtype='<U10')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = load_iris()\n",
    "X = data.data\n",
    "y = data.target\n",
    "data.target_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "85f758f3-e4e9-462e-8c3e-b550a50d874a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure classification_vs_clustering_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x350 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9, 3.5))\n",
    "\n",
    "plt.subplot(121)\n",
    "plt.plot(X[y==0, 2], X[y==0, 3], \"yo\", label=\"Iris setosa\")\n",
    "plt.plot(X[y==1, 2], X[y==1, 3], \"bs\", label=\"Iris versicolor\")\n",
    "plt.plot(X[y==2, 2], X[y==2, 3], \"g^\", label=\"Iris virginica\")\n",
    "plt.xlabel(\"Petal length\", fontsize=14)\n",
    "plt.ylabel(\"Petal width\", fontsize=14)\n",
    "plt.legend(fontsize=12)\n",
    "\n",
    "plt.subplot(122)\n",
    "plt.scatter(X[:, 2], X[:, 3], c=\"k\", marker=\".\")\n",
    "plt.xlabel(\"Petal length\", fontsize=14)\n",
    "plt.tick_params(labelleft=False)\n",
    "\n",
    "save_fig(\"classification_vs_clustering_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d40a3d1c-2cd8-4a71-9907-ded15602ac74",
   "metadata": {},
   "source": [
    "A Gaussian mixture model (explained below) can actually separate these clusters pretty well (using all 4 features: petal length & width, and sepal length & width)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a21a766a-75f4-4814-a5b8-64901306e760",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.mixture import GaussianMixture"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0df3fb17-f839-4923-be5c-3cbb45166a52",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = GaussianMixture(n_components=3, random_state=100).fit(X).predict(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5043d2c1-3e1c-466a-9148-1fd9122044dd",
   "metadata": {},
   "source": [
    "Let's map each cluster to a class. Instead of hard coding the mapping (as is done in the book, for simplicity), we will pick the most common class for each cluster (using the `scipy.stats.mode()` function):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "107cff48-b8b8-4a4f-b7b4-a8da13596d47",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\nfrom scipy import stats\\n\\nmapping = {}\\nfor class_id in np.unique(y):\\n    mode, _ = stats.mode(y_pred[y==class_id])\\n    mapping[mode[0]] = class_id\\n\\nmapping\\n'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "from scipy import stats\n",
    "\n",
    "mapping = {}\n",
    "for class_id in np.unique(y):\n",
    "    mode, _ = stats.mode(y_pred[y==class_id])\n",
    "    mapping[mode[0]] = class_id\n",
    "\n",
    "mapping\n",
    "'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a7edf08d-2c70-4f53-9b4e-d627d80afca3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# y_pred = np.array([mapping[cluster_id] for cluster_id in y_pred])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b41fabd0-7a71-47e8-ac13-a844f78df65d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\nplt.plot(X[y_pred==0, 2], X[y_pred==0, 3], \"yo\", label=\"Cluster 1\")\\nplt.plot(X[y_pred==1, 2], X[y_pred==1, 3], \"bs\", label=\"Cluster 2\")\\nplt.plot(X[y_pred==2, 2], X[y_pred==2, 3], \"g^\", label=\"Cluster 3\")\\nplt.xlabel(\"Petal length\", fontsize=14)\\nplt.ylabel(\"Petal width\", fontsize=14)\\nplt.legend(loc=\"upper left\", fontsize=12)\\nplt.show()\\n'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "plt.plot(X[y_pred==0, 2], X[y_pred==0, 3], \"yo\", label=\"Cluster 1\")\n",
    "plt.plot(X[y_pred==1, 2], X[y_pred==1, 3], \"bs\", label=\"Cluster 2\")\n",
    "plt.plot(X[y_pred==2, 2], X[y_pred==2, 3], \"g^\", label=\"Cluster 3\")\n",
    "plt.xlabel(\"Petal length\", fontsize=14)\n",
    "plt.ylabel(\"Petal width\", fontsize=14)\n",
    "plt.legend(loc=\"upper left\", fontsize=12)\n",
    "plt.show()\n",
    "'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "abbb69e5-0b19-43d0-98c8-543f6c603096",
   "metadata": {},
   "outputs": [],
   "source": [
    "# np.sum(y_pred==y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3cc3bdc0-88ad-45c5-9419-d70f7d6a2c4d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# np.sum(y_pred==y) / len(y_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a68a8e03-a934-466e-abd5-84df2d7a15b7",
   "metadata": {},
   "source": [
    "**Note**: the results in this notebook may differ slightly from the book. This is because algorithms can sometimes be tweaked a bit between Scikit-Learn versions."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c96ab67-8c86-48d6-82f1-d80696e4d7af",
   "metadata": {},
   "source": [
    "## K-Means"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "416e338a-d78e-4887-8dad-69706e87a5f8",
   "metadata": {},
   "source": [
    "Let's start by generating some blobs:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ed255b09-6a76-4306-b7bd-5a3d424b8ce3",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import make_blobs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "54f16fdb-72f3-4fff-a0e2-a8f0d70f1d1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "blob_centers = np.array(\n",
    "    [[0.2, 2.3],\n",
    "     [-1.5, 2.3],\n",
    "     [-2.8, 1.8],\n",
    "     [-2.8, 2.8],\n",
    "     [-2.8, 1.3]])\n",
    "blob_std = np.array([0.4, 0.3, 0.1, 0.1, 0.1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5da06bdd-3697-4889-9491-c885a8baea41",
   "metadata": {},
   "outputs": [],
   "source": [
    "X, y = make_blobs(n_samples=2000, centers=blob_centers,\n",
    "                  cluster_std=blob_std, random_state=100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ad1b4e5-1a51-4061-b048-8df6c1d71535",
   "metadata": {},
   "source": [
    "Now let's plot them:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6ed513d2-4c81-4b32-874a-caabb37bc44c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_clusters(X, y=None):\n",
    "    plt.scatter(X[:, 0], X[:, 1], c=y, s=1)\n",
    "    plt.xlabel(\"$x_1$\", fontsize=14)\n",
    "    plt.ylabel(\"$x_2$\", fontsize=14, rotation=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7302297d-f9df-4453-b502-93583553afb6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure blobs_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 4))\n",
    "plot_clusters(X)\n",
    "save_fig(\"blobs_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5107ce0-c473-4778-b348-dfca2f544abc",
   "metadata": {},
   "source": [
    "**Fit and predict**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe5669d1-8ac9-4ea5-b2d1-dbd9911f9678",
   "metadata": {},
   "source": [
    "Let's train a K-Means clusterer on this dataset. It will try to find each blob's center and assign each instance to the closest blob:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "efdef592-241b-4171-b7ee-e3af53010d6e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "316b4c83-38a6-4f1a-8593-6841630b7fcf",
   "metadata": {},
   "outputs": [],
   "source": [
    "k = 5\n",
    "kmeans = KMeans(n_clusters=k, random_state=100)\n",
    "y_pred = kmeans.fit_predict(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "341cfdcf-0c71-4947-b400-35f18e6e5688",
   "metadata": {},
   "source": [
    "Each instance was assigned to one of the 5 clusters:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "984fb83a-9cfa-4891-ad84-ea88d83351ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 1, 2, ..., 4, 3, 1], dtype=int32)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "95a64f02-3d95-4e40-9b89-200d4e38b5b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred is kmeans.labels_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e790824c-ae13-4853-aabc-26ee78d5fc37",
   "metadata": {},
   "source": [
    "And the following 5 _centroids_ (i.e., cluster centers) were estimated:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d8131e6a-a434-4de1-b588-e43f8bf2125c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-2.79082647,  1.80099268],\n",
       "       [ 0.22961494,  2.27689994],\n",
       "       [-1.43740706,  2.30687961],\n",
       "       [-2.79040614,  2.8052439 ],\n",
       "       [-2.80243183,  1.29810199]])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans.cluster_centers_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d311fda-3cf1-4633-9cda-88fd1219a9ed",
   "metadata": {},
   "source": [
    "Note that the `KMeans` instance preserves the labels of the instances it was trained on. Somewhat confusingly, in this context, the _label_ of an instance is the index of the cluster that instance gets assigned to:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c56ce293-4390-4668-bebc-bdbd3a6bf64c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 1, 2, ..., 4, 3, 1], dtype=int32)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans.labels_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f038869-116a-468b-b86b-79bbbb836f94",
   "metadata": {},
   "source": [
    "Of course, we can predict the labels of new instances:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "dd456ce0-5b83-4cdf-9361-7e9549566a5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 1, 3, 3], dtype=int32)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_new = np.array([[0, 2], [3, 2], [-3, 3], [-3, 2.5]])\n",
    "kmeans.predict(X_new)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d64aa251-6fe3-4f57-99de-a2f919298e08",
   "metadata": {},
   "source": [
    "**Decision Boundaries**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a64cd384-6ba8-42c3-bfa5-a97d80eae06b",
   "metadata": {},
   "source": [
    "Let's plot the model's decision boundaries. This gives us a _Voronoi diagram_:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "fbe65502-09f5-428e-a031-a2ab78ecfdad",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_data(X):\n",
    "    plt.plot(X[:, 0], X[:, 1], 'k.', markersize=2)\n",
    "\n",
    "def plot_centroids(centroids, weights=None, circle_color='w', cross_color='k'):\n",
    "    if weights is not None:\n",
    "        centroids = centroids[weights > weights.max() / 10]\n",
    "    plt.scatter(centroids[:, 0], centroids[:, 1],\n",
    "                marker='o', s=35, linewidths=8,\n",
    "                color=circle_color, zorder=10, alpha=0.9)\n",
    "    plt.scatter(centroids[:, 0], centroids[:, 1],\n",
    "                marker='x', s=2, linewidths=12,\n",
    "                color=cross_color, zorder=11, alpha=1)\n",
    "\n",
    "def plot_decision_boundaries(clusterer, X, resolution=1000, show_centroids=True,\n",
    "                             show_xlabels=True, show_ylabels=True):\n",
    "    mins = X.min(axis=0) - 0.1\n",
    "    maxs = X.max(axis=0) + 0.1\n",
    "    xx, yy = np.meshgrid(np.linspace(mins[0], maxs[0], resolution),\n",
    "                         np.linspace(mins[1], maxs[1], resolution))\n",
    "    Z = clusterer.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    \n",
    "    plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
    "                 cmap=\"Pastel2\")\n",
    "    plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
    "                 linewidths=1, colors='k')\n",
    "    plot_data(X)\n",
    "    if show_centroids:\n",
    "        plot_centroids(clusterer.cluster_centers_)\n",
    "    \n",
    "    if show_xlabels:\n",
    "        plt.xlabel(\"$x_1$\", fontsize=14)\n",
    "    else:\n",
    "        plt.tick_params(labelbottom=False)\n",
    "    if show_ylabels:\n",
    "        plt.ylabel(\"$x_2$\", fontsize=14, rotation=0)\n",
    "    else:\n",
    "        plt.tick_params(labelleft=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e486bf41-6a1f-4ca0-8b7d-02c1190d410f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure voronoi_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 4))\n",
    "plot_decision_boundaries(kmeans, X)\n",
    "save_fig(\"voronoi_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18d37eda-023f-4a8e-922f-1c58573a14a9",
   "metadata": {},
   "source": [
    "Not bad! Some of the instances near the edges were probably assigned to the wrong cluster, but overall it looks pretty good."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a09de4a-2d3f-4b8c-b5e7-ccd89f363155",
   "metadata": {},
   "source": [
    "**Hard Clustering _vs_ Soft Clustering**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0288e323-6eb7-46c5-840f-edd41da06fc0",
   "metadata": {},
   "source": [
    "Rather than arbitrarily choosing the closest cluster for each instance, which is called _hard clustering_, it might be better measure the distance of each instance to all 5 centroids. This is what the `transform()` method does:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d9744d8f-bf41-45c3-b56f-840f29101b94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[2.79791285, 0.35971738, 1.46980072, 2.90426999, 2.88899377],\n",
       "       [5.794245  , 2.78418874, 4.4480059 , 5.84612872, 5.84473061],\n",
       "       [1.21711631, 3.30957495, 1.70941878, 0.28611104, 1.71332718],\n",
       "       [0.72963333, 3.23731158, 1.57448156, 0.3702748 , 1.21802792]])"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans.transform(X_new)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db29d43f-25ca-4071-a9d1-ce8a97439ef6",
   "metadata": {},
   "source": [
    "You can verify that this is indeed the Euclidian distance between each instance and each centroid:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0417a821-6051-41aa-90d3-e2af9c84d2a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[2.79791285, 0.35971738, 1.46980072, 2.90426999, 2.88899377],\n",
       "       [5.794245  , 2.78418874, 4.4480059 , 5.84612872, 5.84473061],\n",
       "       [1.21711631, 3.30957495, 1.70941878, 0.28611104, 1.71332718],\n",
       "       [0.72963333, 3.23731158, 1.57448156, 0.3702748 , 1.21802792]])"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.linalg.norm(np.tile(X_new, (1, k)).reshape(-1, k, 2) - kmeans.cluster_centers_, axis=2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be188ff6-a8f5-4804-b7f0-165a25b72aa1",
   "metadata": {},
   "source": [
    "### The K-Means Algorithm"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3f17ed0-62f5-4b05-9b17-4e0a4f129d4e",
   "metadata": {},
   "source": [
    "The K-Means algorithm is one of the fastest clustering algorithms, and also one of the simplest:\n",
    "* First initialize $k$ centroids randomly: $k$ distinct instances are chosen randomly from the dataset and the centroids are placed at their locations.\n",
    "* Repeat until convergence (i.e., until the centroids stop moving):\n",
    "    * Assign each instance to the closest centroid.\n",
    "    * Update the centroids to be the mean of the instances that are assigned to them."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78e3641e-fd62-4c50-9e5c-5370f4d31731",
   "metadata": {},
   "source": [
    "The `KMeans` class applies an optimized algorithm by default. To get the original K-Means algorithm (for educational purposes only), you must set `init=\"random\"`, `n_init=1`and `algorithm=\"full\"`. These hyperparameters will be explained below."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50469ae0-3068-40f7-96a0-187a2ab22378",
   "metadata": {},
   "source": [
    "Let's run the K-Means algorithm for 1, 2 and 3 iterations, to see how the centroids move around:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "e8d85e39-a3b5-4406-b3e1-90f6d8f1dd8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(init=&#x27;random&#x27;, max_iter=3, n_clusters=5, n_init=1, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(init=&#x27;random&#x27;, max_iter=3, n_clusters=5, n_init=1, random_state=0)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(init='random', max_iter=3, n_clusters=5, n_init=1, random_state=0)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans_iter1 = KMeans(n_clusters=5, init=\"random\", n_init=1,\n",
    "                      algorithm=\"lloyd\", max_iter=1, random_state=0)\n",
    "kmeans_iter2 = KMeans(n_clusters=5, init=\"random\", n_init=1,\n",
    "                      algorithm=\"lloyd\", max_iter=2, random_state=0)\n",
    "kmeans_iter3 = KMeans(n_clusters=5, init=\"random\", n_init=1,\n",
    "                      algorithm=\"lloyd\", max_iter=3, random_state=0)\n",
    "kmeans_iter1.fit(X)\n",
    "kmeans_iter2.fit(X)\n",
    "kmeans_iter3.fit(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31006677-7104-485c-8f14-3a1e70624280",
   "metadata": {},
   "source": [
    "And let's plot this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "7dd34b9b-833e-4a3b-b8a9-114afc5fe1e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure kmeans_algorithm_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x800 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 8))\n",
    "\n",
    "plt.subplot(321)\n",
    "plot_data(X)\n",
    "plot_centroids(kmeans_iter1.cluster_centers_, circle_color='r', cross_color='w')\n",
    "plt.ylabel(\"$x_2$\", fontsize=14, rotation=0)\n",
    "plt.tick_params(labelbottom=False)\n",
    "plt.title(\"Update the centroids (initially randomly)\", fontsize=14)\n",
    "\n",
    "plt.subplot(322)\n",
    "plot_decision_boundaries(kmeans_iter1, X, show_xlabels=False, show_ylabels=False)\n",
    "plt.title(\"Label the instances\", fontsize=14)\n",
    "\n",
    "plt.subplot(323)\n",
    "plot_decision_boundaries(kmeans_iter1, X, show_centroids=False, show_xlabels=False)\n",
    "plot_centroids(kmeans_iter2.cluster_centers_)\n",
    "\n",
    "plt.subplot(324)\n",
    "plot_decision_boundaries(kmeans_iter2, X, show_xlabels=False, show_ylabels=False)\n",
    "\n",
    "plt.subplot(325)\n",
    "plot_decision_boundaries(kmeans_iter2, X, show_centroids=False)\n",
    "plot_centroids(kmeans_iter3.cluster_centers_)\n",
    "\n",
    "plt.subplot(326)\n",
    "plot_decision_boundaries(kmeans_iter3, X, show_ylabels=False)\n",
    "\n",
    "save_fig(\"kmeans_algorithm_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "715245c3-5245-4f28-a34f-8e9ffa057f0c",
   "metadata": {},
   "source": [
    "**K-Means Variability**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bca848ac-c270-498a-88e6-9e9b2ebe8bf6",
   "metadata": {},
   "source": [
    "In the original K-Means algorithm, the centroids are just initialized randomly, and the algorithm simply runs a single iteration to gradually improve the centroids, as we saw above.\n",
    "\n",
    "However, one major problem with this approach is that if you run K-Means multiple times (or with different random seeds), it can converge to very different solutions, as you can see below:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9ae84477-dd2b-4007-8386-906e89f33684",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_clusterer_comparison(clusterer1, clusterer2, X, title1=None, title2=None):\n",
    "    clusterer1.fit(X)\n",
    "    clusterer2.fit(X)\n",
    "    \n",
    "    plt.figure(figsize=(10, 3.2))\n",
    "    \n",
    "    plt.subplot(121)\n",
    "    plot_decision_boundaries(clusterer1, X)\n",
    "    if title1:\n",
    "        plt.title(title1, fontsize=14)\n",
    "        \n",
    "    plt.subplot(122)\n",
    "    plot_decision_boundaries(clusterer2, X, show_ylabels=False)\n",
    "    if title2:\n",
    "        plt.title(title2, fontsize=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "894970c5-8b78-42f4-95b1-20e84a07c20a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_clusterer_comparison(clusterer1, clusterer2, X, title1=None, title2=None):\n",
    "    clusterer1.fit(X)\n",
    "    clusterer2.fit(X)\n",
    "\n",
    "    plt.figure(figsize=(10, 3.2))\n",
    "\n",
    "    plt.subplot(121)\n",
    "    plot_decision_boundaries(clusterer1, X)\n",
    "    if title1:\n",
    "        plt.title(title1, fontsize=14)\n",
    "\n",
    "    plt.subplot(122)\n",
    "    plot_decision_boundaries(clusterer2, X, show_ylabels=False)\n",
    "    if title2:\n",
    "        plt.title(title2, fontsize=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "dd426766-6884-43db-b0c2-9c2d4f488cba",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure kmeans_variability_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x320 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "kmeans_rnd_init1 = KMeans(n_clusters=5, init=\"random\", n_init=1,\n",
    "                          algorithm=\"lloyd\", random_state=2)\n",
    "kmeans_rnd_init2 = KMeans(n_clusters=5, init=\"random\", n_init=1,\n",
    "                          algorithm=\"lloyd\", random_state=5)\n",
    "\n",
    "plot_clusterer_comparison(kmeans_rnd_init1, kmeans_rnd_init2, X,\n",
    "                          \"Solution 1\", \"Solution 2 (with a different radom init)\")\n",
    "\n",
    "save_fig(\"kmeans_variability_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a8061c2-06ab-4a65-bb1a-c0c8c64153d8",
   "metadata": {},
   "source": [
    "### Inertia"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "564774d8-b02c-45e0-a162-2ee6b6cf6137",
   "metadata": {},
   "source": [
    "To select the best model, we will need a way to evaluate a K-Mean model's performance. Unfortunately, clustering is an unsupervised task, so we do not have the targets. But at least we can measure the distance between each instance and its centroid. This is the idea behind the _inertia_ metric:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "88c47142-c520-4284-95ba-62a2d74294f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "230.5132264064016"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans.inertia_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7766e779-3b6f-46a6-8d98-dc7691755a0f",
   "metadata": {},
   "source": [
    "As you can easily verify, inertia is the sum of the squared distances between each training instance and its closest centroid:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "97919a0d-57bc-4cfe-9969-90d33b5b74c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "230.51322640640095"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_dist = kmeans.transform(X)\n",
    "np.sum(X_dist[np.arange(len(X_dist)), kmeans.labels_]**2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff76f2e8-25fb-4ccb-b9b9-4e5ce3046f52",
   "metadata": {},
   "source": [
    "The `score()` method returns the negative inertia. Why negative? Well, it is because a predictor's `score()` method must always respect the \"_greater is better_\" rule."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "0511edb3-b9d7-473d-9793-99cedd371ca8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-230.51322640640157"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans.score(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ca855bf-c5a3-4345-ad8c-76377ec8aa9e",
   "metadata": {},
   "source": [
    "### Multiple Initializations"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17caf93d-f370-4862-ad05-cd9fbc9c8b3d",
   "metadata": {},
   "source": [
    "So one approach to solve the variability issue is to simply run the K-Means algorithm multiple times with different random initializations, and select the solution that minimizes the inertia. For example, here are the inertias of the two \"bad\" models shown in the previous figure:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "baaf5e01-f0d6-4bed-b047-532439c76d3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(init=&#x27;random&#x27;, n_clusters=5, n_init=1, random_state=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(init=&#x27;random&#x27;, n_clusters=5, n_init=1, random_state=2)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(init='random', n_clusters=5, n_init=1, random_state=2)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans_rnd_init1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "33b3017f-f398-4930-b03d-460c5944a364",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "230.51322640640163"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans_rnd_init1.inertia_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "886312e8-75f5-4a7e-9070-b65dea35cfa6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "230.51322640640163"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans_rnd_init2.inertia_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93af941f-7568-4917-adc2-20f87221a6c3",
   "metadata": {},
   "source": [
    "As you can see, they have a higher inertia than the first \"good\" model we trained, which means they are probably worse."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f95eccb-bd08-4e1c-b7a8-481ebf511722",
   "metadata": {},
   "source": [
    "When you set the `n_init` hyperparameter, Scikit-Learn runs the original algorithm `n_init` times, and selects the solution that minimizes the inertia. By default, Scikit-Learn sets `n_init=10`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "1390220a-86fc-4c3c-bcb1-3041c55841e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-3 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-3 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-3 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-3 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-3 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(init=&#x27;random&#x27;, n_clusters=5, n_init=10, random_state=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(init=&#x27;random&#x27;, n_clusters=5, n_init=10, random_state=2)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(init='random', n_clusters=5, n_init=10, random_state=2)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans_rnd_10_inits = KMeans(n_clusters=5, init=\"random\", n_init=10,\n",
    "                             algorithm=\"lloyd\", random_state=2)\n",
    "kmeans_rnd_10_inits.fit(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93bcc637-3625-435b-8b71-e4f71b8a9828",
   "metadata": {},
   "source": [
    "As you can see, we end up with the initial model, which is certainly the optimal K-Means solution (at least in terms of inertia, and assuming $k=5$)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "b4c0a212-111c-45fa-9dec-0d8fcb11cb55",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 4))\n",
    "plot_decision_boundaries(kmeans_rnd_10_inits, X)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "239d2a77-9aa8-47b9-a1bb-f097ae65000d",
   "metadata": {},
   "source": [
    "### Centroid initialization methods"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d864c2b-cde1-4fbd-9fe7-5e3fb3aa9cd2",
   "metadata": {},
   "source": [
    "Instead of initializing the centroids entirely randomly, it is preferable to initialize them using the following algorithm, proposed in a [2006 paper](https://goo.gl/eNUPw6) by David Arthur and Sergei Vassilvitskii:\n",
    "* Take one centroid $c_1$, chosen uniformly at random from the dataset.\n",
    "* Take a new center $c_i$, choosing an instance $\\mathbf{x}_i$ with probability: $D(\\mathbf{x}_i)^2$ / $\\sum\\limits_{j=1}^{m}{D(\\mathbf{x}_j)}^2$ where $D(\\mathbf{x}_i)$ is the distance between the instance $\\mathbf{x}_i$ and the closest centroid that was already chosen. This probability distribution ensures that instances that are further away from already chosen centroids are much more likely be selected as centroids.\n",
    "* Repeat the previous step until all $k$ centroids have been chosen."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "901eacb7-f7c7-40fe-b8ae-fe10c5a21c08",
   "metadata": {},
   "source": [
    "The rest of the K-Means++ algorithm is just regular K-Means. With this initialization, the K-Means algorithm is much less likely to converge to a suboptimal solution, so it is possible to reduce `n_init` considerably. Most of the time, this largely compensates for the additional complexity of the initialization process."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18166ddd-ce40-4434-a6b5-f015f75c3eea",
   "metadata": {},
   "source": [
    "\n",
    "To set the initialization to K-Means++, simply set init=\"k-means++\" (this is actually the default):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "eea5054d-d0d7-4387-97bb-854598ae8a6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-4 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-4 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-4 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-4 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-4 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;KMeans<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>KMeans()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KMeans()"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "KMeans()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "ef4ebd6c-9aea-452b-8a60-f60eecbd4644",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "230.5097033567057"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "good_init = np.array([[-3, 3], [-3, 2], [-3, 1], [-1, 2], [0, 2]])\n",
    "kmeans = KMeans(n_clusters=5, init=good_init, n_init=1, random_state=100)\n",
    "kmeans.fit(X)\n",
    "kmeans.inertia_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08bc53f2-e132-41d5-82ea-ed0ef9a5c9f4",
   "metadata": {},
   "source": [
    "### Accelerated K-Means"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6388fd8-9eb4-4095-aada-71f78c8c55ca",
   "metadata": {},
   "source": [
    "The K-Means algorithm can be significantly accelerated by avoiding many unnecessary distance calculations: this is achieved by exploiting the triangle inequality (given three points A, B and C, the distance AC is always such that AC â‰¤ AB + BC) and by keeping track of lower and upper bounds for distances between instances and centroids (see this [2003 paper](https://www.aaai.org/Papers/ICML/2003/ICML03-022.pdf) by Charles Elkan for more details)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "186338b4-ad41-495e-bb30-b7eebb4e5922",
   "metadata": {},
   "source": [
    "To use Elkan's variant of K-Means, just set `algorithm=\"elkan\"`. Note that it does not support sparse data, so by default, Scikit-Learn uses `\"elkan\"` for dense data, and `\"full\"` (the regular K-Means algorithm) for sparse data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "28e2096d-1f2e-4e6b-8a22-5189085be5d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25.7 ms Â± 882 Âµs per loop (mean Â± std. dev. of 7 runs, 50 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit -n 50 KMeans(algorithm=\"elkan\", random_state=100).fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "adacd28b-b9da-40f4-9e35-a54162820699",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13.2 ms Â± 523 Âµs per loop (mean Â± std. dev. of 7 runs, 50 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit -n 50 KMeans(algorithm=\"lloyd\", random_state=100).fit(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29d07e36-2ed5-4b31-8673-97ecc741d43b",
   "metadata": {},
   "source": [
    "There's no big difference in this case, as the dataset is fairly small."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39e88fd7-35e8-4a06-a941-1b441011cdd0",
   "metadata": {},
   "source": [
    "### Mini-Batch K-Means"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53e1c2b8-df03-42ee-be56-4e8022c5f3c8",
   "metadata": {},
   "source": [
    "Scikit-Learn also implements a variant of the K-Means algorithm that supports mini-batches (see [this paper](http://www.eecs.tufts.edu/~dsculley/papers/fastkmeans.pdf)):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "8ef74b2a-8b3e-492e-bf02-1f7aeb1996da",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import MiniBatchKMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "6df7cd1a-685e-465d-a162-46f0ea1965f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-5 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-5 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-5 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-5 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-5 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-5 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-5 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-5 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-5 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MiniBatchKMeans(n_clusters=5, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;MiniBatchKMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.MiniBatchKMeans.html\">?<span>Documentation for MiniBatchKMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>MiniBatchKMeans(n_clusters=5, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "MiniBatchKMeans(n_clusters=5, random_state=100)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "minibatch_kmeans = MiniBatchKMeans(n_clusters=5, random_state=100)\n",
    "minibatch_kmeans.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "21c491bd-e1ca-4eb1-aff1-214998034d96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "253.30142097303093"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "minibatch_kmeans.inertia_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "777ca8b0-e1e6-4289-a78b-9f51b2df8d1d",
   "metadata": {},
   "source": [
    "If the dataset does not fit in memory, the simplest option is to use the `memmap` class, just like we did for incremental PCA in the previous chapter. First let's load MNIST:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7dfce71b-f479-4cca-9555-1f594c777666",
   "metadata": {},
   "source": [
    "**Warning:** since Scikit-Learn 0.24, `fetch_openml()` returns a Pandas `DataFrame` by default. To avoid this and keep the same code as in the book, we use `as_frame=False`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "b98c9f99-740c-485b-b52d-e66514b02eec",
   "metadata": {},
   "outputs": [],
   "source": [
    "import urllib.request\n",
    "from sklearn.datasets import fetch_openml\n",
    "\n",
    "mnist = fetch_openml('mnist_784', version=1, as_frame=False)\n",
    "mnist.target = mnist.target.astype(np.int64)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "987224a1-832e-40f7-8e5c-0d83f0c3def7",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    mnist[\"data\"], mnist[\"target\"], random_state=100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1fde4520-4c51-4024-ba5c-2635ff952146",
   "metadata": {},
   "source": [
    "Next, let's write it to a `memmap`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "6bc93ec2-5d6d-4eb4-a26a-5948869c9947",
   "metadata": {},
   "outputs": [],
   "source": [
    "filename = \"my_mnist.data\"\n",
    "X_mm = np.memmap(filename, dtype='float32', mode='write', shape=X_train.shape)\n",
    "X_mm[:] = X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "1354d49b-fd0f-43d3-9122-857b70a7d68a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-6 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-6 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-6 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-6 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-6 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-6 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-6 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-6 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-6 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-6 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-6 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MiniBatchKMeans(batch_size=10, n_clusters=10, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;MiniBatchKMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.MiniBatchKMeans.html\">?<span>Documentation for MiniBatchKMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>MiniBatchKMeans(batch_size=10, n_clusters=10, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "MiniBatchKMeans(batch_size=10, n_clusters=10, random_state=100)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "minibatch_kmeans = MiniBatchKMeans(n_clusters=10, batch_size=10, random_state=100)\n",
    "minibatch_kmeans.fit(X_mm)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f11eb5a1-2c76-4fd4-8bd8-bc20d08bd6fd",
   "metadata": {},
   "source": [
    "If your data is so large that you cannot use `memmap`, things get more complicated. Let's start by writing a function to load the next batch (in real life, you would load the data from disk):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "1145ce0c-20de-427b-813b-c18b323229b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_next_batch(batch_size):\n",
    "    return X[np.random.choice(len(X), batch_size, replace=False)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7ed8479-6731-48c7-aa67-63336d405d64",
   "metadata": {},
   "source": [
    "Now we can train the model by feeding it one batch at a time. We also need to implement multiple initializations and keep the model with the lowest inertia:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "037da163-17d0-48cd-b578-fe23628c7bc9",
   "metadata": {},
   "outputs": [],
   "source": [
    "np.random.seed(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "9c588ec5-39aa-42e8-b8ee-1b8cddf9bf2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "k = 5\n",
    "n_init = 10\n",
    "n_iterations = 100\n",
    "batch_size = 100\n",
    "init_size = 500  # more data for K-Means++ initialization\n",
    "evaluate_on_last_n_iters = 10\n",
    "\n",
    "best_kmeans = None\n",
    "\n",
    "for init in range(n_init):\n",
    "    minibatch_kmeans = MiniBatchKMeans(n_clusters=k, init_size=init_size)\n",
    "    X_init = load_next_batch(init_size)\n",
    "    minibatch_kmeans.partial_fit(X_init)\n",
    "\n",
    "    minibatch_kmeans.sum_inertia_ = 0\n",
    "    for iteration in range(n_iterations):\n",
    "        X_batch = load_next_batch(batch_size)\n",
    "        minibatch_kmeans.partial_fit(X_batch)\n",
    "        if iteration >= n_iterations - evaluate_on_last_n_iters:\n",
    "            minibatch_kmeans.sum_inertia_ += minibatch_kmeans.inertia_\n",
    "\n",
    "    if (best_kmeans is None or\n",
    "        minibatch_kmeans.sum_inertia_ < best_kmeans.sum_inertia_):\n",
    "        best_kmeans = minibatch_kmeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "927355a2-9daf-4e1e-a1e4-9a72d4ca65c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-230.60112289518605"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_kmeans.score(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f5e0554-7366-47d7-a594-a89885c41fd6",
   "metadata": {},
   "source": [
    "Mini-batch K-Means is much faster than regular K-Means:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "cc6d9e59-c888-48ae-8e2f-33dbd8d6e315",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4.9 ms Â± 384 Âµs per loop (mean Â± std. dev. of 7 runs, 100 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit KMeans(n_clusters=5, random_state=100).fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f877b009-104d-42e8-be7f-e6d23c714ec8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9.76 ms Â± 1.01 ms per loop (mean Â± std. dev. of 7 runs, 100 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit MiniBatchKMeans(n_clusters=5, random_state=100).fit(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b52effd-9c25-47e2-a50b-5256e89c82c2",
   "metadata": {},
   "source": [
    "That's *much* faster! However, its performance is often lower (higher inertia), and it keeps degrading as _k_ increases. Let's plot the inertia ratio and the training time ratio between Mini-batch K-Means and regular K-Means:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "5d68c6c2-32b0-4ba0-ba85-a161e77f2e1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from timeit import timeit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "ce1a3f65-6e06-40b6-bbe6-3cce4c1c71f8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100/100"
     ]
    }
   ],
   "source": [
    "times = np.empty((100, 2))\n",
    "inertias = np.empty((100, 2))\n",
    "for k in range(1, 101):\n",
    "    kmeans_ = KMeans(n_clusters=k, random_state=100)\n",
    "    minibatch_kmeans = MiniBatchKMeans(n_clusters=k, random_state=100)\n",
    "    print(\"\\r{}/{}\".format(k, 100), end=\"\")\n",
    "    times[k-1, 0] = timeit(\"kmeans_.fit(X)\", number=10, globals=globals())\n",
    "    times[k-1, 1] = timeit(\"minibatch_kmeans.fit(X)\", number=10, globals=globals())\n",
    "    inertias[k-1, 0] = kmeans_.inertia_\n",
    "    inertias[k-1, 1] = minibatch_kmeans.inertia_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "cd3d470e-3a0f-4f34-a213-9146d9a58258",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure minibatch_kmeans_vs_kmeans\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 4))\n",
    "\n",
    "plt.subplot(121)\n",
    "plt.plot(range(1, 101), inertias[:, 0], \"r--\", label=\"K-Means\")\n",
    "plt.plot(range(1, 101), inertias[:, 1], \"b.-\", label=\"Mini-batch K-Means\")\n",
    "plt.xlabel(\"$k$\", fontsize=16)\n",
    "plt.title(\"Inertia\", fontsize=14)\n",
    "plt.legend(fontsize=14)\n",
    "plt.axis([1, 100, 0, 100])\n",
    "\n",
    "plt.subplot(122)\n",
    "plt.plot(range(1, 101), times[:, 0], \"r--\", label=\"K-Means\")\n",
    "plt.plot(range(1, 101), times[:, 1], \"b.-\", label=\"Mini-batch K-Means\")\n",
    "plt.xlabel(\"$k$\", fontsize=16)\n",
    "plt.title(\"Traing time (seconds)\", fontsize=14)\n",
    "plt.legend(fontsize=14)\n",
    "plt.axis([1, 100, 0, 6])\n",
    "\n",
    "save_fig(\"minibatch_kmeans_vs_kmeans\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2069c84-1f9a-460f-8654-9c00c26edaad",
   "metadata": {},
   "source": [
    "### Finding the optimal number of clusters"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60efb2d2-4e2e-4527-9c06-0c331821ce1d",
   "metadata": {},
   "source": [
    "What if the number of clusters was set to a lower or greater value than 5?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "f5f56c9e-d83a-4280-a992-18eb6bd44951",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure bad_n_clusters_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x320 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "kmeans_k3 = KMeans(n_clusters=3, random_state=100)\n",
    "kmeans_k8 = KMeans(n_clusters=8, random_state=100)\n",
    "\n",
    "plot_clusterer_comparison(kmeans_k3, kmeans_k8, X, \"$k=3$\", \"$k=8$\")\n",
    "save_fig(\"bad_n_clusters_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a12527f3-7928-4b44-b5ce-01502c8ff9f6",
   "metadata": {},
   "source": [
    "Ouch, these two models don't look great. What about their inertias?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "36bc050c-2578-45c1-93e4-3e65f9f9f450",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "703.0997482678491"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans_k3.inertia_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "642fd128-1640-48b6-a960-1065a256f51d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "133.4077990534929"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans_k8.inertia_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f31f1e1d-5c6b-4076-8bd2-eb9b8dd43360",
   "metadata": {},
   "source": [
    "No, we cannot simply take the value of $k$ that minimizes the inertia, since it keeps getting lower as we increase $k$. Indeed, the more clusters there are, the closer each instance will be to its closest centroid, and therefore the lower the inertia will be. However, we can plot the inertia as a function of $k$ and analyze the resulting curve:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "2755269c-af2f-4b61-b995-3e56eb2c3f96",
   "metadata": {},
   "outputs": [],
   "source": [
    "kmeans_per_k = [KMeans(n_clusters=k, random_state=100).fit(X)\n",
    "                for k in range(1, 10)]\n",
    "inertias = [model.inertia_ for model in kmeans_per_k]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "0fa69da9-650d-44c8-9073-47759f6e9d17",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure inertia_vs_k_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x350 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 3.5))\n",
    "plt.plot(range(1, 10), inertias, \"bo-\")\n",
    "plt.xlabel(\"$k$\", fontsize=14)\n",
    "plt.annotate('Elbow',\n",
    "             xy=(4, inertias[3]),\n",
    "             xytext=(0.55, 0.55),\n",
    "             textcoords='figure fraction',\n",
    "             fontsize=16,\n",
    "             arrowprops=dict(facecolor='black', shrink=0.1)\n",
    "            )\n",
    "plt.axis([1, 8.5, 0, 1300])\n",
    "save_fig(\"inertia_vs_k_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ac0afd0-4e95-49b6-9aa5-42840ba91279",
   "metadata": {},
   "source": [
    "As you can see, there is an elbow at $k=4$, which means that less clusters than that would be bad, and more clusters would not help much and might cut clusters in half. So $k=4$ is a pretty good choice. Of course in this example it is not perfect since it means that the two blobs in the lower left will be considered as just a single cluster, but it's a pretty good clustering nonetheless."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "cf60a547-5056-4554-8a47-a51635b9a8ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_decision_boundaries(kmeans_per_k[4-1], X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecd91bb6-f794-4898-a39e-78cc220ec8be",
   "metadata": {},
   "source": [
    "Another approach is to look at the _silhouette score_, which is the mean _silhouette coefficient_ over all the instances. An instance's silhouette coefficient is equal to $(b - a)/\\max(a, b)$ where $a$ is the mean distance to the other instances in the same cluster (it is the _mean intra-cluster distance_), and $b$ is the _mean nearest-cluster distance_, that is the mean distance to the instances of the next closest cluster (defined as the one that minimizes $b$, excluding the instance's own cluster). The silhouette coefficient can vary between -1 and +1: a coefficient close to +1 means that the instance is well inside its own cluster and far from other clusters, while a coefficient close to 0 means that it is close to a cluster boundary, and finally a coefficient close to -1 means that the instance may have been assigned to the wrong cluster."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "853a80c8-a8d2-4ed1-8a7d-b785e2f1dd17",
   "metadata": {},
   "source": [
    "Let's plot the silhouette score as a function of $k$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "34ff667d-239c-4e28-9c75-e01c820c62ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import silhouette_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "d3e8c1c8-87b9-41d7-8271-b06b3fbc7e94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6431255759148078"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "silhouette_score(X, kmeans.labels_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "8238655c-bc3d-452a-ab54-f8d19bc02008",
   "metadata": {},
   "outputs": [],
   "source": [
    "silhouette_scores = [silhouette_score(X, model.labels_)\n",
    "                     for model in kmeans_per_k[1:]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "b8a3ee62-d22c-44a5-a470-d23f4beb408f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure silhouette_score_vs_k_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 3))\n",
    "plt.plot(range(2, 10), silhouette_scores, \"bo-\")\n",
    "plt.xlabel(\"$k$\", fontsize=14)\n",
    "plt.ylabel(\"Silhouette score\", fontsize=14)\n",
    "plt.axis([1.8, 8.5, 0.55, 0.7])\n",
    "save_fig(\"silhouette_score_vs_k_plot\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "22050727-0853-4313-ad6e-66761799322b",
   "metadata": {},
   "source": [
    "As you can see, this visualization is much richer than the previous one: in particular, although it confirms that $k=4$ is a very good choice, but it also underlines the fact that $k=5$ is quite good as well."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0492a51-eab5-46cb-8be6-d838c56316bc",
   "metadata": {},
   "source": [
    "An even more informative visualization is given when you plot every instance's silhouette coefficient, sorted by the cluster they are assigned to and by the value of the coefficient. This is called a _silhouette diagram_:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "083ca0ec-2b52-4115-af4c-c3329f1d4c7c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure silhouette_analysis_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABEEAAAN5CAYAAADn7yWaAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd7wkdZ3v/3dVdT45zQkzZ3LOTCTNEAUHBBNJZWEAF9eLui6GK+5VwdVFRb26ssvV3yJB2VVXWUVXWSMqggjXtIosXiUMzAzDpJM7VX1/f1R3nz5nzgxzYnV4PXk0p7q6uvtzmmHq2+/6BssYYwQAAAAAAFDh7KALAAAAAAAAmAmEIAAAAAAAoCoQggAAAAAAgKpACAIAAAAAAKoCIQgAAAAAAKgKhCAAAAAAAKAqEIIAAAAAAICqQAgCAAAAAACqAiEIAAAAAACoCoQgACZscHBQoVBItbW1cl036HJGuOeee3TFFVdo3bp1mjVrlsLhsBoaGrRlyxbdfPPN6u/vD7pEAACqWim3I8by7ne/W5ZlybIsfehDHwq6HAATFAq6AADl61e/+pVc19WGDRvkOE7Q5Yxw22236aGHHtKKFSu0YcMGNTc364UXXtDDDz+sRx99VJ///Of14x//WF1dXUGXCgBAVSrldsRoDz30kD7xiU/IsiwZY4IuB8AkEIIAmLBHH31UkrR169aAKznSJz7xCS1ZskTNzc0j9h84cECvetWr9OCDD+od73iH/vVf/zWgCgEAqG6l3I4oNjg4qJ07d6qzs1ObN2/W17/+9aBLAjAJDIcBMGH5xsuWLVsCruRIW7duPSIAkaSWlhb9/d//vSTpu9/97kyXBQAAckq5HVHshhtu0B//+Ed97nOfU0NDQ9DlAJgkQhAAE/bYY49JOrLxMjAwoKuvvlqWZWnDhg3605/+FER5RxUK+Z3gotFowJUAAFC9yqEd8cADD+gzn/mMrrjiCp133nmB1QFg6hCCAJiQnp4e/fGPf1R7e7vmzZtX2P/b3/5WmzZt0h133KE3v/nNevjhh7Vo0aIAKx2pr69PN954oyTpwgsvDLYYAACqVDm0I/r7+3X11Vervb1dn/rUpwKpAcDUIwQBMCGPPfaYjDEjrt7cdttt2rp1q55//nl9+ctf1j/90z8ds7fFzp07C7Osj+f2wAMPHHed3/3ud7Vz505dccUVOvfcczV79mx997vf1ctf/nJ99KMfncxHAAAAJqgc2hHvfOc79dRTT+m2225TU1PTZH9lACWCiVEBTEjxZGaHDx/WNddco3vvvVfr16/XV77yFS1ZsuQlX+PUU0+d0Ht3dHQc97GPP/647rrrrhH7Xv/61+uTn/wk43oBAAhIqbcjvvvd7+qzn/2sLrvsMr3qVa+a0PsAKE2EIAAmJD+O13VdrV+/Xs8884yuvfZaffrTn1YsFjuu13jjG9+oN77xjdNZpt7+9rfr7W9/uzKZjJ599ll94xvf0Ic+9CHdf//9+vd//3dt3759Wt8fAAAcqZTbET09PbrmmmvU1tamz3zmM1P++gCCRQgCYELyV3A+8IEPSJLuuusuXXHFFUGWdEzhcFiLFi3S9ddfr1NOOUUnnXSSLr/8cv33f/+34vF40OUBAFBVSrkd8fa3v13PPfecvvzlL6u1tTXocgBMMcsYY4IuAkB52bdvn9rb2zV//nwtWbJE3/ve93TFFVccMezkpfzzP/+zHnzwwXG//3ve8x4tX7583M8rtnr1av3+97/XT37yE23btm1SrwUAAI5fqbcjGhsbNTAwoFNOOeWIx5544gm98MILmj9/vubNm6eOjg596UtfGncNAIJDTxAA45a/erNp0yZ9/vOf1/bt23X33Xerq6tLN99883G/zoMPPjjuBo/kT4Q22RCkpqZGkt8QAwAAM6cc2hHZbFY//vGPj/r4008/raeffnrEyjYAygOrwwAYt/w43o0bN6qurk7f/va3NW/ePH3kIx/RP/7jPx7369x5550yxoz7dvrpp0+q/v379+s3v/mNJGnp0qWTei0AADA+pd6OOHz48FGfe+WVV0qS/u7v/k7GGD399NMT/RgABIQQBMC45a/gbNiwQZLU2dmp73znO2pqatLb3vY23XvvvUGWp8cff1z33HOPksnkEY89+eSTuvjii5VKpXTiiSdqzZo1AVQIAED1KvV2BIDKRggCYNzyjZeNGzcW9q1YsUL33XefIpGI3vCGN0xojO5U2bdvny6//HK1trZq27Ztet3rXqfXvva12rx5s1asWKEHHnhAK1as0Je//OXAagQAoFqVejsCQGUjBAEwLs8++6z27dunuXPnqqWlZcRjp556qr74xS8qnU7rwgsv1OOPPx5IjatWrdKHP/xhbdu2Tc8995y+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AABVgRAEAAAAAABUBUIQAAAAAABQFQhBAEzK4OCgQqGQamtr5bpu0OWMsHPnTlmWdcxbMpkMukwAAKpSKbch8tLptP7hH/5Bp556qpqbmxWLxTRnzhzt2LFDX/7yl4MuD8AEhIIuAEB5+9WvfiXXdbVhwwY5jhN0OWM65ZRTtHjx4jEfK9WaAQCodKXehnjuued07rnn6vHHH1dra6tOOeUU1dTUaNeuXfrJT36impoaXXrppUGXCWCcCEEATMqjjz4qSdq6dWvAlRzdG9/4Ru3cuTPoMgAAQJFSbkMMDQ3pZS97mZ544gndeOONeu9736twOFx4fHBwUE8++WSAFQKYKEIQAJOSb8Bs2bIl4EoAAEA5KeU2xM0336wnnnhC1157rT7wgQ8c8XgikdD69etnvjAAk8acIAAm5bHHHpN0ZANmYGBAV199tSzL0oYNG/SnP/0piPIAAECJKtU2RCaT0W233SZJete73jWj7w1g+tETBMCE9fT06I9//KPa29s1b968wv7f/va3uvTSS/XEE0/ozW9+s/73//7fikajgdX5ox/9SP/1X/+lvr4+tbS0aMuWLTrvvPMCrQkAgGpWym2IX/7yl9q/f7+6urq0ePFi/dd//Zfuvfde7d69W01NTdq2bZt27Ngh2+Z6MlCOCEEATNhjjz0mY8yIKzi33Xabrr/+eoXDYX35y1/WJZdccszX2Llzp+66665xv/ePfvQjnX766cd17N13333Evs7OTn3+85/Xy1/+8nG/NwAAmJxSbkP89re/lSTNmTNH73nPe/Sxj31MxpjC4x/96Ed1wgkn6Otf/7rmzp077vcHECxCEAATVjyh2eHDh3XNNdfo3nvv1fr16/WVr3xFS5YsecnXOPXUUyf03h0dHS95zLp16/TpT39aZ511lubOnauhoSH95je/0Y033qiHHnpIF154ob773e8ed5gCAACmRim3IQ4cOCDJX73mF7/4ha677jq97W1vU0dHR+H+r371K51//vn65S9/OWLCVAClzzLFsSYAjMNFF12kr33ta7rpppv0+c9/Xs8884yuvfZaffrTn1YsFgu6vKMyxujVr361vvGNb2jdunX69a9/HXRJAABUlVJuQ9x8881673vfK0l63etep3/5l38Z8fizzz6rZcuWKZlM6u6779Zf/MVfBFEmgAliIBuACctfxfnA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42o4iIiI1Ik9v356YuUMJkKOzg3LyCzprzqfm/BCRXmCSbfU46HcziDsiXCwdkblOJgYbsGB2yLGdXE8J+zB4FW3OcKLIrGODInuNvy2dNWQT2diDiq3ap/aICIiMg0KQWZRaqCbs756Q9RliIiISBNa8JoTWPCaE6IuQ0REpK5pMgIRERERERERmRMUgoiIiIiIiIjInKAQRERERERERETmBM0JIiIyF6RSUVcgIiIis0HnfJEDUggiItLs0mkYGYm6ChEREak1nfNFDkrDYURERERERERkTlAIIiIiIiIiIiJzgkIQEZFmNz4Or3tdeBsfj7oaERERqRWd80UOSnOCiIg0u2IR/vVfJ7ZFRESkOemcL3JQ6gkiIiIiIiIiInOCQhARERERERERmRMUgoiIiIiIiIjInKAQRERERERERETmBIUgIiIiIiIiIjInNO3qMNZaAAYHByOuREQkYiMjE9uDg5otXmZF+fxbPh83GrUjRKQh6ZwvTaKW7YimDUFeeuklABYuXBhxJSIidWRgIOoKZI556aWXaGtri7qMwzY0NASoHSEiDUznfGkCtWhHNG0I0tnZCcBTTz3VEI2vwcFBFi5cyNNPP01ra2vU5TQVfbe1pe+3dvTd1pa+39ras2cPixYtqpyPG83AwABPP/00LS0tGGMq+xvt702j1dso9L3Whr7X2tF3Wxv6Xmunlu2Ipg1BHCec7qStra2h/kK2trY2VL2NRN9tben7rR19t7Wl77e2yufjRuM4DgsWLNjv843296bR6m0U+l5rQ99r7ei7rQ19r7VTi3ZEY7ZMREREREREREQOk0IQEREREREREZkTmjYEicfjXHvttcTj8ahLOSSNVm8j0XdbW/p+a0ffbW3p+62tZv1+G+3P1Wj1Ngp9r7Wh77V29N3Whr7X2qnld2tso65dJyIiIiIiIiJyGJq2J4iIiIiIiIiISDWFICIiIiIiIiIyJygEEREREREREZE5QSGIiIiIiIiIiMwJTRWC7N69m3e+85309PSQTqd5xStewY9//ONDeu0Pf/hD/vzP/5zjjz8e3/cxxsxITdlslve///0MDAyQTCbZvHkz3/zmNw/ptc8++yxvfOMbaW9vp7W1ld///d/nv//7v2ekrmYw3e/2/vvvZ8uWLSxbtoxUKsXq1at573vfy+7du2tfdAM5kr+71V75yldijOFd73pXDapsTEf63X7xi1/kpJNOIp1O097ezsknn8y///u/17DixnIk3+8DDzzAK17xCrq7u2lvb+eEE07gc5/7XI0rbhzDw8Nce+21vOY1r6GzsxNjDHfdddchv/5IztNRUvti7lDbojbUpqgdtSlqQ22J2qmLtoRtEsVi0Z588sk2nU7b6667zt5666127dq1tqWlxT7++OMHff21115rfd+3xx9/vF21apWdqa/mwgsvtJ7n2SuvvNLedttt9qSTTrKe59nvfve7B3zd0NCQXblype3t7bU33XST/dSnPmUXLlxoFyxYYHfs2DEjtTW66X63XV1ddv369faaa66xf/d3f2cvv/xyG4vF7Jo1a+zo6OgsVV//pvv9VvvSl75k0+m0Beyll15aw2oby5F8t9dee601xtgLLrjA/u3f/q39zGc+Yy+55BJ7zz33zELljWG63+9XvvIVa4yxJ598sv3MZz5jb731VnvaaadZwH7qU5+aperr2xNPPGEBu2jRInvGGWdYwN55552H9NojPU9HRe2LuUVti9pQm6J21KaoDbUlaqce2hJNE4J88YtftID9p3/6p8q+F154wba3t9s3velNB3399u3bKyepSy+9dEYaKQ8//LAF7M0331zZNzY2ZpcvX25POumkA772pptusoD94Q9/WNn36KOPWtd17dVXX33EtTW6I/luH3zwwX323X333Rawf/d3fzfTpTakI/l+q49fsmSJ/dCHPqQGS5Uj+W5/8IMfWGOMTqIHcCTf7ytf+Uo7MDBgx8fHK/vy+bxdvny53bBhQ81qbiTj4+N227Zt1lprH3nkkcNquBzpeToqal/MHWpb1IbaFLWjNkVtqC1RW/XQlmiaEOSCCy6wfX19tlgsTtr/zne+06ZSqUl/EQ9mphopV111lXVd1+7Zs2fS/o9+9KMWsE899dR+X7tp0ya7adOmffa/6lWvssuXLz/i2hrdkXy3UxkcHLSAveKKK2ayzIY1E9/v9ddfbxctWmRHR0fVYKlyJN/tli1b7Lx582yxWLRBENihoaFal9twjuT73bx5s123bt2U+zdv3jzjtTa6w224zOR5ejapfTF3qG1RG2pT1I7aFLWhtsTsiaot0TRzgvzkJz/huOOOw3Em/5FOOOEERkdHefzxxyOpadWqVbS2tu5TE8BPf/rTKV8XBAE///nPednLXrbPcyeccAK/+93vGBoamvF6G8l0v9v92b59OwDd3d0zUl+jO9Lv96mnnuJjH/sYN910E8lkslZlNqQj+W6/9a1vsWnTJv7X//pf9PT00NLSwrx587j11ltrWXJDOZLv94wzzuCXv/wl11xzDb/97W/53e9+x4c//GF+9KMf8b73va+WZc8J9XiePhT1WLfaF7WhtkVtqE1RO2pT1IbaEvVrps7JTROCbNu2jXnz5u2zv7zvueeem+2Spl3Tzp07yWazdffnqScz/f/7pptuwnVdzj///Bmpr9Ed6ff73ve+l2OPPZYLL7ywJvU1sul+t7t27WLHjh1873vf45prruEv//Iv+eIXv8jGjRu57LLLuO2222pad6M4kr+711xzDW984xu54YYbWLlyJStWrOBjH/sYX/rSlzjvvPNqVvNcUY/n6UNRj3WrfVEbalvUhtoUtaM2RW2oLVG/ZurntDejVc2QIAjI5XKHdGw8HscYw9jYGPF4fJ/nE4kEAGNjYzNa46GYbk3l/fX256knM/n/+x/+4R+44447eN/73sfKlStnrMZGdiTf74MPPsiXvvQlHn744ZrV18im+90ODw8D8NJLL/GFL3yBLVu2AHD++eezfv16PvKRj3DJJZfUqOrGcSR/d+PxOKtWreL888/nvPPOo1gscvvtt/OWt7yFb37zm5x44ok1q3suqIfztNoXal8ciNoWtaE2Re2oTVEbakvUr5n6OV2XPUG+853vkEwmD+n261//GoBkMkk2m93nvcbHxyvPz7bp1lTeX29/nnoyU/+/v/vd7/KOd7yDV7/61dxwww0zWmMjm+73WygUuPzyy3nrW9/Kpk2balpjozrSnwu+70+6qug4Dlu2bOGZZ57hqaeeqkHFjeVIfja8613v4mtf+xpf+MIXuPDCC3nzm9/MAw88wLx583j3u99ds5rnino4T6t9ofbFgahtURtqU9SO2hS1obZE/Zqpn9N12RNkzZo13HnnnYd0bLnry7x589i2bds+z5f3DQwMzFyBh2jevHk8++yz++w/WE2dnZ3E4/G6+/PUk+l+t9V+9rOfce6553L00Udz33334Xl1+c8hEtP9fu+55x5+/etfc9ttt7F169ZJzw0NDbF161Z6e3tJpVIzXnOjOJKfC4lEgvb2dlzXnfRcb28vEHZvXbRo0QxX3Fim+/3mcrnKVdvqcaa+73P22Wdz6623ksvliMVitSl8DqiH87TaF2pfHIjaFrWhNkXtqE1RG2pL1K+ZOifX5U/m/v5+Lr744sN6zcaNG/nud79LEAST/tI9/PDDpFIpVq1aNcNVHlpNDz74IIODg5Mm1il36du4ceOUr3Mch/Xr1/OjH/1on+cefvhhli1bRktLS01qbhTT/W7Lfve73/Ga17yG3t5e/vVf/5VMJlPLchvOdL/fp556inw+zymnnLLPc/fccw/33HMPX/7yl3nDG95Qi7IbwpH8XNi4cSOPPPLIPifQ8vjHnp6e2hXeIKb7/b700ksUCgWKxeI+z+XzeYIgmPI5OXT1cJ5W+0LtiwNR26I21KaoHbUpakNtifo1Y+fkw13Gpl594Qtf2GfN4BdffNG2t7fbLVu2TDr2t7/9rf3tb3+73/eaqSXs/uM//mOfNabHx8ftihUrJi2R9OSTT9pHH3100ms/9rGPWcA+8sgjlX2PPfaYdV3Xvv/97z/i2hrdkXy327Zts8uWLbMDAwP2iSeemK2SG8p0v99HH33UfvnLX97nBtjXvva19stf/rJ97rnnZvXPUm+O5O/uX//1X1vA3n777ZV9Y2NjdtmyZXbt2rW1L74BTPf7LRQKtr293a5atcpms9nK/qGhIbtgwQK7Zs2a2fkDNJADLWv33HPP2UcffdTmcrnKvsM5T9cTtS/mDrUtakNtitpRm6I21JaYPVG1JZomBCkUCvbEE0+0mUzGXn/99fazn/2sXbdunW1pabGPPfbYpGMXL15sFy9ePGnf1q1b7Yc//GH74Q9/2G7evNkClcf33HPPtOu64IILrOd59qqrrrK33XabPfnkk63nefbb3/525ZjTTz99n0bR4OCgXb58ue3t7bUf//jH7V//9V/bhQsX2oGBAfvCCy9Mu55mMt3v9phjjrGAfd/73mc/97nPTbr93//7f2f7j1G3pvv9TgWwl156aS3LbSjT/W5HR0ftunXrrO/79sorr7T/63/9L7tp0ybruq7913/919n+Y9St6X6/H/nIRyxgjz32WPvXf/3X9hOf+IQ96qijLGA///nPz/Yfo2595jOfsR/+8Iftn/3Zn1nAnnfeeZXz5e7du6211l500UUWmPTL4OGcp+uJ2hdzi9oWtaE2Re2oTVEbakvUVtRtiaYJQay1dufOnfYd73iH7erqsqlUyp5++umTrnSUTdVIefDBBy0w5e3000+fdk1jY2P2yiuvtP39/TYej9tNmzbZb3zjG5OO2d8P/aefftqef/75trW11WYyGfv617/e/uY3v5l2Lc1mut/t/v4/H+n/62ZzJH9396YGy2RH8t0+//zz9qKLLrKdnZ02Ho/bzZs37/Paue5Ivt97773XnnDCCba9vd0mk0m7efNme999981W6Q1h8eLF+/0ZWm6oTNVwsfbQz9P1Ru2LuUNti9pQm6J21KaoDbUlaivqtoSx1toDD5gREREREREREWl8dblEroiIiIiIiIjITFMIIiIiIiIiIiJzgkIQEREREREREZkTFIKIiIiIiIiIyJygEERERERERERE5gSFICIiIiIiIiIyJygEEREREREREZE5QSGIiIiIiIiIiMwJCkFEREREREREZE5QCCJyGM444wyMMZP2PfTQQxhjuO666ybtX7JkCUuWLJm94mRW5fN5rrvuOlauXEk8HscYwz//8z8f8LmtW7dijOHiiy+e9ufq75WISGNTW0LK1JYQiYZCEJnTRkZG+OhHP8pxxx1HJpMhHo+zYMECTj31VK6++mp+97vfRV1iZO666y6MMdx1111TPj9VI66Wdu3axUc+8hFOOukkurq68H2fnp4ezjrrLD7zmc8wPDw8a7UAfPKTn+T6669nYGCAK6+8kmuvvZY1a9Yc9LlGtL/GuYiIqC1xIGpLHJjaEiLR8KIuQCQqQ0NDvPzlL+fnP/85K1as4C1veQtdXV3s2LGDH/7wh3zsYx9j+fLlLF++vPKae+65h9HR0Qirnpu+9a1v8cY3vpGdO3dy1FFHccEFF9DV1cVLL73Ed77zHS6//HJuueWWWW1ofv3rXyeTyfDNb36TWCx2SM/l83keffRR2trapv253/rWt6b9WhERmVlqSzQOtSUmqC0hc51CEJmzbrnlFn7+85/zx3/8x9x+++37XIl44oknyGazk/YtWrRoNksU4Gc/+xnnnHMOAJ///Od585vfvM8xDz30EFdfffWs1vXcc8/R1dW1T6PlQM/5vn/EV3GqG9IiIhIttSUag9oSk6ktIXOeFZmjzj77bAvYn/zkJ4f8mtNPP93u/c/mwQcftIC99tprJ+1fvHixXbx41AUbOwAADgBJREFUsR0aGrKXX365nTdvno3FYnb9+vX2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JyeEhYUhISFB2QE9OTkZYWFhiI+PR3BwMCYmJtDd3Y36+no88cQTqK6uvul9CQ8Px7fffov169cjJSUFH3zwAaKiorBgwQIMDQ2hsbER7e3tUKvVyjlRUVHIzMxEQUEBQkNDkZSUBBHBsWPH8Oeff0Kj0SAqKkopHxoaiuLiYmzevBlLly7F2rVrERQUhL/++gu///476uvr8fLLL+PTTz+d/wdsQXFxMc6ePYucnBx89913iIuLg4jg119/xYkTJ9DX16csdTXn1VdfRVNTE8rKytDY2IhVq1bB398ffX190Gq1aG5uxpdffomHHnpoXv0LDg6Gv78/jhw5AkdHRwQGBsLGxgaZmZmzPqtORGQNGEswljBgLGEZYwm6p9zeG3aJ/ru0Wq3s3btXVq9eLYsXLxYnJydxcnKSoKAgSU1NNXoXuoG599nP9t5zS+9+N1ePiMjAwIBoNBpRqVRib28vPj4+8vzzz0t7e7vZetra2mTlypXi4uIi7u7ukpiYKBcuXJDU1FQBIF1dXSbn1NbWSkJCgvj6+oq9vb0sXLhQVqxYIdnZ2XLx4kWjslVVVRIRESHOzs4CwKjPk5OTsnXrVnnwwQfFzs7O7DvrtVqtpKeni0qlEgcHB/Hy8pJHHnlENBqNnD592uw1zWZwcFCys7Pl8ccfFy8vL7GzsxNvb2+JiYmRAwcOyJUrV0zOKSkpkYiICHFxcREXFxeJiIiQkpKSWds4ffq0pKSkiL+/v3L/ly1bJu+88450dHQYlbX0+c6W19XVZfY+iYiMjIzIjh07JDg4WBwdHcXDw0PCw8Pl/fffl2vXrt1SuxUVFbJq1Srx8vISe3t7CQgIkJiYGMnPz5eBgQGlXFZWlgCQuro6kzpKS0sFgJSWlhqlNzU1SXR0tLi5uSnfBXPfLyIia8JYgrHETIwlGEvQvc9G5C7t0ENEREREREREdA/hniBEREREREREZBU4CEJEREREREREVoGDIERERERERERkFTgIQkRERERERERWgYMgRERERERERGQVOAhCRERERERERFaBgyBEREREREREZBU4CEJEREREREREVoGDIERERERERERkFTgIQkRERERERERWgYMgRERERERERGQVOAhCRERERERERFbhf3SnBezi+5/qAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1100x900 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import silhouette_samples\n",
    "from matplotlib.ticker import FixedLocator, FixedFormatter\n",
    "\n",
    "plt.figure(figsize=(11, 9))\n",
    "\n",
    "for k in (3, 4, 5, 6):\n",
    "    plt.subplot(2, 2, k - 2)\n",
    "    \n",
    "    y_pred = kmeans_per_k[k - 1].labels_\n",
    "    silhouette_coefficients = silhouette_samples(X, y_pred)\n",
    "\n",
    "    padding = len(X) // 30\n",
    "    pos = padding\n",
    "    ticks = []\n",
    "    for i in range(k):\n",
    "        coeffs = silhouette_coefficients[y_pred == i]\n",
    "        coeffs.sort()\n",
    "\n",
    "        color = mpl.cm.Spectral(i / k)\n",
    "        plt.fill_betweenx(np.arange(pos, pos + len(coeffs)), 0, coeffs,\n",
    "                          facecolor=color, edgecolor=color, alpha=0.7)\n",
    "        ticks.append(pos + len(coeffs) // 2)\n",
    "        pos += len(coeffs) + padding\n",
    "\n",
    "    plt.gca().yaxis.set_major_locator(FixedLocator(ticks))\n",
    "    plt.gca().yaxis.set_major_formatter(FixedFormatter(range(k)))\n",
    "    if k in (3, 5):\n",
    "        plt.ylabel(\"Cluster\")\n",
    "    \n",
    "    if k in (5, 6):\n",
    "        plt.gca().set_xticks([-0.1, 0, 0.2, 0.4, 0.6, 0.8, 1])\n",
    "        plt.xlabel(\"Silhouette Coefficient\")\n",
    "    else:\n",
    "        plt.tick_params(labelbottom=False)\n",
    "\n",
    "    plt.axvline(x=silhouette_scores[k - 2], color=\"red\", linestyle=\"--\")\n",
    "    plt.title(\"$k={}$\".format(k), fontsize=16)\n",
    "\n",
    "save_fig(\"silhouette_analysis_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1baf2323-0b7e-40cd-aa00-964520e2bf7f",
   "metadata": {},
   "source": [
    "As you can see, $k=5$ looks like the best option here, as all clusters are roughly the same size, and they all cross the dashed line, which represents the mean silhouette score."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1cb15a5-e7da-4126-9226-10be53aa31db",
   "metadata": {},
   "source": [
    "## Limits of K-Means"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "8b901557-1066-467d-afad-3267926f7bdc",
   "metadata": {},
   "outputs": [],
   "source": [
    "X1, y1 = make_blobs(n_samples=1000, centers=((4, -4), (0, 0)), random_state=42)\n",
    "X1 = X1.dot(np.array([[0.374, 0.95], [0.732, 0.598]]))\n",
    "X2, y2 = make_blobs(n_samples=250, centers=1, random_state=42)\n",
    "X2 = X2 + [6, -8]\n",
    "X = np.r_[X1, X2]\n",
    "y = np.r_[y1, y2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "c16b4343-2368-454b-8b31-3bacfc9af791",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_clusters(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "07403cef-3091-45c8-b76c-852f824e7829",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-7 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-7 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-7 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-7 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-7 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-7 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-7 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-7 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-7 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=3, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(n_clusters=3, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=3, random_state=100)"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans_good = KMeans(n_clusters=3, init=np.array([[-1.5, 2.5], [0.5, 0], [4, 0]]), n_init=1, random_state=100)\n",
    "kmeans_bad = KMeans(n_clusters=3, random_state=100)\n",
    "kmeans_good.fit(X)\n",
    "kmeans_bad.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "28ae47b2-9948-4185-9801-ece6bf3b0b6e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n",
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure bad_kmeans_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x330 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 3.3))\n",
    "\n",
    "plt.subplot(121)\n",
    "plot_decision_boundaries(kmeans_good, X)\n",
    "plt.title(\"Inertia = {:.1f}\".format(kmeans_good.inertia_), fontsize=14)\n",
    "\n",
    "plt.subplot(122)\n",
    "plot_decision_boundaries(kmeans_bad, X, show_ylabels=False)\n",
    "plt.title(\"Inertia = {:.1f}\".format(kmeans_bad.inertia_), fontsize=14)\n",
    "\n",
    "save_fig(\"bad_kmeans_plot\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80392479-4522-4851-b2af-57c93d139a1a",
   "metadata": {},
   "source": [
    "## Using Clustering for Image Segmentation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "b008f800-36d0-44b9-bd14-f0c12ccb6124",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading ladybug.png\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "('./images/unsupervised_learning/ladybug.png',\n",
       " <http.client.HTTPMessage at 0x7f0aab56f520>)"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Download the ladybug image\n",
    "images_path = os.path.join(PROJECT_ROOT_DIR, \"images\", \"unsupervised_learning\")\n",
    "os.makedirs(images_path, exist_ok=True)\n",
    "DOWNLOAD_ROOT = \"https://raw.githubusercontent.com/ageron/handson-ml2/master/\"\n",
    "filename = \"ladybug.png\"\n",
    "print(\"Downloading\", filename)\n",
    "url = DOWNLOAD_ROOT + \"images/unsupervised_learning/\" + filename\n",
    "urllib.request.urlretrieve(url, os.path.join(images_path, filename))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "71340c83-b83a-4046-b3aa-eb1c6f1e9e9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(533, 800, 3)"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from matplotlib.image import imread\n",
    "image = imread(os.path.join(images_path, filename))\n",
    "image.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "bad91ed8-43e2-4ffc-95fc-700fa7bbca32",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = image.reshape(-1, 3)\n",
    "kmeans = KMeans(n_clusters=8, random_state=100).fit(X)\n",
    "segmented_img = kmeans.cluster_centers_[kmeans.labels_]\n",
    "segmentes_img = segmented_img.reshape(image.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "2cee1337-c789-4550-b30f-0ed50ebc8046",
   "metadata": {},
   "outputs": [],
   "source": [
    "segmented_imgs = []\n",
    "n_colors = (10, 8, 6, 4, 2)\n",
    "for n_clusters in n_colors:\n",
    "    kmeans = KMeans(n_clusters=n_clusters, random_state=100).fit(X)\n",
    "    segmented_img = kmeans.cluster_centers_[kmeans.labels_]\n",
    "    segmented_imgs.append(segmented_img.reshape(image.shape))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "a8bb0f5b-98b8-49b8-b08d-8f36c80d0512",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure image_segmentation_diagram\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplots_adjust(wspace=0.05, hspace=0.1)\n",
    "\n",
    "plt.subplot(231)\n",
    "plt.imshow(image)\n",
    "plt.title(\"Original image\")\n",
    "plt.axis('off')\n",
    "\n",
    "for idx, n_clusters in enumerate(n_colors):\n",
    "    plt.subplot(232 + idx)\n",
    "    plt.imshow(segmented_imgs[idx])\n",
    "    plt.title(\"{} colors\".format(n_clusters))\n",
    "    plt.axis('off')\n",
    "    \n",
    "save_fig('image_segmentation_diagram', tight_layout=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9036240b-3718-491a-a06a-b1b618e460a9",
   "metadata": {},
   "source": [
    "## Using Clustering for Preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1719d0c5-f1b6-4053-981d-dc4c63a06d14",
   "metadata": {},
   "source": [
    "Let's tackle the _digits dataset_ which is a simple MNIST-like dataset containing 1,797 grayscale 8Ã—8 images representing digits 0 to 9."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "cb2e5831-1072-452e-8894-d7eaafa1c9c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import load_digits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "f48b9c9f-b788-4ebd-b03e-b67811f37153",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_digits, y_digits = load_digits(return_X_y=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15f3f0d1-7694-4aa2-a065-71b8d4701017",
   "metadata": {},
   "source": [
    "Let's split it into a training set and a test set:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "aa1b7826-5cfe-499a-91f9-d8b6a03d2f9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "0dad5ba2-f933-496e-9cee-867d6e9bd13a",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X_digits, y_digits, random_state=100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca0db2b6-01d4-4051-b6fa-3bdfa6b087c4",
   "metadata": {},
   "source": [
    "Now let's fit a Logistic Regression model and evaluate it on the test set:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "9379685d-7c3d-4844-a340-43214086e609",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "14aef11e-a7bf-4275-87b7-a4026a1b3810",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-8 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-8 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-8 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-8 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-8 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-8 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-8 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-8 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-8 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-8 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-8 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(max_iter=5000, multi_class='ovr', random_state=100)"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg = LogisticRegression(multi_class=\"ovr\", solver=\"lbfgs\", max_iter=5000, random_state=100)\n",
    "log_reg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "718d09f2-3592-406c-9f03-7fe7cc3541c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9622222222222222"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg_score = log_reg.score(X_test, y_test)\n",
    "log_reg_score"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5767b91a-633f-4219-92ba-1d11a108ce01",
   "metadata": {},
   "source": [
    "Okay, that's our baseline: 96.89% accuracy. Let's see if we can do better by using K-Means as a preprocessing step. We will create a pipeline that will first cluster the training set into 50 clusters and replace the images with their distances to the 50 clusters, then apply a logistic regression model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "d8e14bdb-bf9f-4325-992e-26adbeccab2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.pipeline import Pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "61b0404d-93f2-46b8-b5af-5df8cbf9b980",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-9 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-9 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-9 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-9 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-9 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-9 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-9 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-9 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-9 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-9 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-9 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;kmeans&#x27;, KMeans(n_clusters=50, random_state=100)),\n",
       "                (&#x27;log_reg&#x27;,\n",
       "                 LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;,\n",
       "                                    random_state=100))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;Pipeline<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.pipeline.Pipeline.html\">?<span>Documentation for Pipeline</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;kmeans&#x27;, KMeans(n_clusters=50, random_state=100)),\n",
       "                (&#x27;log_reg&#x27;,\n",
       "                 LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;,\n",
       "                                    random_state=100))])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(n_clusters=50, random_state=100)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;, random_state=100)</pre></div> </div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('kmeans', KMeans(n_clusters=50, random_state=100)),\n",
       "                ('log_reg',\n",
       "                 LogisticRegression(max_iter=5000, multi_class='ovr',\n",
       "                                    random_state=100))])"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pipeline = Pipeline([\n",
    "    (\"kmeans\", KMeans(n_clusters=50, random_state=100)),\n",
    "    (\"log_reg\", LogisticRegression(multi_class=\"ovr\", solver=\"lbfgs\", max_iter=5000, random_state=100)),\n",
    "])\n",
    "pipeline.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "c515e073-9842-47c8-84de-a6df2ca5ec26",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9844444444444445"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pipeline_score = pipeline.score(X_test, y_test)\n",
    "pipeline_score"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "510b1684-3193-484f-8513-ac3eb38b829e",
   "metadata": {},
   "source": [
    "How much did the error rate drop?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "cbaad494-2358-415e-b355-1ff3e0ff811d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5882352941176476"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1 - (1 - pipeline_score) / (1 - log_reg_score)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3b39158-885e-46de-ad91-4490d7cb4fd9",
   "metadata": {},
   "source": [
    "How about that? We reduced the error rate by over 35%! But we chose the number of clusters $k$ completely arbitrarily, we can surely do better. Since K-Means is just a preprocessing step in a classification pipeline, finding a good value for $k$ is much simpler than earlier: there's no need to perform silhouette analysis or minimize the inertia, the best value of $k$ is simply the one that results in the best classification performance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "b6efa451-e3ee-4783-a680-bd4a67dee89d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7041aaef-8609-4b29-b003-43870d1b8042",
   "metadata": {},
   "source": [
    "**Warning**: the following cell may take close to 20 minutes to run, or more depending on your hardware."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "645c724f-6918-4d69-9a9d-4d6537ba8849",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 3 folds for each of 98 candidates, totalling 294 fits\n",
      "[CV] END ...............................kmeans__n_clusters=2; total time=   0.3s\n",
      "[CV] END ...............................kmeans__n_clusters=2; total time=   0.1s\n",
      "[CV] END ...............................kmeans__n_clusters=2; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=3; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=3; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=3; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=4; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=4; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=4; total time=   0.3s\n",
      "[CV] END ...............................kmeans__n_clusters=5; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=5; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=5; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=6; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=6; total time=   0.2s\n",
      "[CV] END ...............................kmeans__n_clusters=6; total time=   0.3s\n",
      "[CV] END ...............................kmeans__n_clusters=7; total time=   0.3s\n",
      "[CV] END ...............................kmeans__n_clusters=7; total time=   0.3s\n",
      "[CV] END ...............................kmeans__n_clusters=7; total time=   0.4s\n",
      "[CV] END ...............................kmeans__n_clusters=8; total time=   0.4s\n",
      "[CV] END ...............................kmeans__n_clusters=8; total time=   0.4s\n",
      "[CV] END ...............................kmeans__n_clusters=8; total time=   0.4s\n",
      "[CV] END ...............................kmeans__n_clusters=9; total time=   0.5s\n",
      "[CV] END ...............................kmeans__n_clusters=9; total time=   0.6s\n",
      "[CV] END ...............................kmeans__n_clusters=9; total time=   0.5s\n",
      "[CV] END ..............................kmeans__n_clusters=10; total time=   0.7s\n",
      "[CV] END ..............................kmeans__n_clusters=10; total time=   0.7s\n",
      "[CV] END ..............................kmeans__n_clusters=10; total time=   0.6s\n",
      "[CV] END ..............................kmeans__n_clusters=11; total time=   1.0s\n",
      "[CV] END ..............................kmeans__n_clusters=11; total time=   1.0s\n",
      "[CV] END ..............................kmeans__n_clusters=11; total time=   1.2s\n",
      "[CV] END ..............................kmeans__n_clusters=12; total time=   1.5s\n",
      "[CV] END ..............................kmeans__n_clusters=12; total time=   1.4s\n",
      "[CV] END ..............................kmeans__n_clusters=12; total time=   1.5s\n",
      "[CV] END ..............................kmeans__n_clusters=13; total time=   1.2s\n",
      "[CV] END ..............................kmeans__n_clusters=13; total time=   1.1s\n",
      "[CV] END ..............................kmeans__n_clusters=13; total time=   1.6s\n",
      "[CV] END ..............................kmeans__n_clusters=14; total time=   1.4s\n",
      "[CV] END ..............................kmeans__n_clusters=14; total time=   1.6s\n",
      "[CV] END ..............................kmeans__n_clusters=14; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=15; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=15; total time=   1.6s\n",
      "[CV] END ..............................kmeans__n_clusters=15; total time=   1.5s\n",
      "[CV] END ..............................kmeans__n_clusters=16; total time=   1.6s\n",
      "[CV] END ..............................kmeans__n_clusters=16; total time=   1.6s\n",
      "[CV] END ..............................kmeans__n_clusters=16; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=17; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=17; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=17; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=18; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=18; total time=   2.6s\n",
      "[CV] END ..............................kmeans__n_clusters=18; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=19; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=19; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=19; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=20; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=20; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=20; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=21; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=21; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=21; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=22; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=22; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=22; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=23; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=23; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=23; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=24; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=24; total time=   2.8s\n",
      "[CV] END ..............................kmeans__n_clusters=24; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=25; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=25; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=25; total time=   4.0s\n",
      "[CV] END ..............................kmeans__n_clusters=26; total time=   4.2s\n",
      "[CV] END ..............................kmeans__n_clusters=26; total time=   4.8s\n",
      "[CV] END ..............................kmeans__n_clusters=26; total time=   3.3s\n",
      "[CV] END ..............................kmeans__n_clusters=27; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=27; total time=   3.0s\n",
      "[CV] END ..............................kmeans__n_clusters=27; total time=   3.7s\n",
      "[CV] END ..............................kmeans__n_clusters=28; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=28; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=28; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=29; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=29; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=29; total time=   3.5s\n",
      "[CV] END ..............................kmeans__n_clusters=30; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=30; total time=   3.4s\n",
      "[CV] END ..............................kmeans__n_clusters=30; total time=   3.4s\n",
      "[CV] END ..............................kmeans__n_clusters=31; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=31; total time=   3.2s\n",
      "[CV] END ..............................kmeans__n_clusters=31; total time=   3.1s\n",
      "[CV] END ..............................kmeans__n_clusters=32; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=32; total time=   3.2s\n",
      "[CV] END ..............................kmeans__n_clusters=32; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=33; total time=   2.4s\n",
      "[CV] END ..............................kmeans__n_clusters=33; total time=   2.6s\n",
      "[CV] END ..............................kmeans__n_clusters=33; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=34; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=34; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=34; total time=   3.1s\n",
      "[CV] END ..............................kmeans__n_clusters=35; total time=   3.0s\n",
      "[CV] END ..............................kmeans__n_clusters=35; total time=   2.8s\n",
      "[CV] END ..............................kmeans__n_clusters=35; total time=   2.8s\n",
      "[CV] END ..............................kmeans__n_clusters=36; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=36; total time=   3.1s\n",
      "[CV] END ..............................kmeans__n_clusters=36; total time=   3.2s\n",
      "[CV] END ..............................kmeans__n_clusters=37; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=37; total time=   3.1s\n",
      "[CV] END ..............................kmeans__n_clusters=37; total time=   3.5s\n",
      "[CV] END ..............................kmeans__n_clusters=38; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=38; total time=   2.8s\n",
      "[CV] END ..............................kmeans__n_clusters=38; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=39; total time=   2.4s\n",
      "[CV] END ..............................kmeans__n_clusters=39; total time=   3.0s\n",
      "[CV] END ..............................kmeans__n_clusters=39; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=40; total time=   2.8s\n",
      "[CV] END ..............................kmeans__n_clusters=40; total time=   3.1s\n",
      "[CV] END ..............................kmeans__n_clusters=40; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=41; total time=   3.0s\n",
      "[CV] END ..............................kmeans__n_clusters=41; total time=   3.5s\n",
      "[CV] END ..............................kmeans__n_clusters=41; total time=   3.1s\n",
      "[CV] END ..............................kmeans__n_clusters=42; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=42; total time=   3.0s\n",
      "[CV] END ..............................kmeans__n_clusters=42; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=43; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=43; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=43; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=44; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=44; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=44; total time=   2.6s\n",
      "[CV] END ..............................kmeans__n_clusters=45; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=45; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=45; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=46; total time=   2.9s\n",
      "[CV] END ..............................kmeans__n_clusters=46; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=46; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=47; total time=   2.4s\n",
      "[CV] END ..............................kmeans__n_clusters=47; total time=   3.1s\n",
      "[CV] END ..............................kmeans__n_clusters=47; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=48; total time=   8.5s\n",
      "[CV] END ..............................kmeans__n_clusters=48; total time=   3.8s\n",
      "[CV] END ..............................kmeans__n_clusters=48; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=49; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=49; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=49; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=50; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=50; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=50; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=51; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=51; total time=   2.4s\n",
      "[CV] END ..............................kmeans__n_clusters=51; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=52; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=52; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=52; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=53; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=53; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=53; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=54; total time=   2.4s\n",
      "[CV] END ..............................kmeans__n_clusters=54; total time=   1.6s\n",
      "[CV] END ..............................kmeans__n_clusters=54; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=55; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=55; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=55; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=56; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=56; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=56; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=57; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=57; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=57; total time=   1.6s\n",
      "[CV] END ..............................kmeans__n_clusters=58; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=58; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=58; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=59; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=59; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=59; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=60; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=60; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=60; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=61; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=61; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=61; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=62; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=62; total time=   2.5s\n",
      "[CV] END ..............................kmeans__n_clusters=62; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=63; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=63; total time=   2.6s\n",
      "[CV] END ..............................kmeans__n_clusters=63; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=64; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=64; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=64; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=65; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=65; total time=   1.5s\n",
      "[CV] END ..............................kmeans__n_clusters=65; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=66; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=66; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=66; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=67; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=67; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=67; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=68; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=68; total time=   3.5s\n",
      "[CV] END ..............................kmeans__n_clusters=68; total time=   2.4s\n",
      "[CV] END ..............................kmeans__n_clusters=69; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=69; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=69; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=70; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=70; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=70; total time=   2.7s\n",
      "[CV] END ..............................kmeans__n_clusters=71; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=71; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=71; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=72; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=72; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=72; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=73; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=73; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=73; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=74; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=74; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=74; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=75; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=75; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=75; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=76; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=76; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=76; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=77; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=77; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=77; total time=   2.3s\n",
      "[CV] END ..............................kmeans__n_clusters=78; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=78; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=78; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=79; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=79; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=79; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=80; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=80; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=80; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=81; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=81; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=81; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=82; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=82; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=82; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=83; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=83; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=83; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=84; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=84; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=84; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=85; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=85; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=85; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=86; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=86; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=86; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=87; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=87; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=87; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=88; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=88; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=88; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=89; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=89; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=89; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=90; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=90; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=90; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=91; total time=   2.1s\n",
      "[CV] END ..............................kmeans__n_clusters=91; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=91; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=92; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=92; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=92; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=93; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=93; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=93; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=94; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=94; total time=   1.6s\n",
      "[CV] END ..............................kmeans__n_clusters=94; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=95; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=95; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=95; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=96; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=96; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=96; total time=   1.7s\n",
      "[CV] END ..............................kmeans__n_clusters=97; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=97; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=97; total time=   2.0s\n",
      "[CV] END ..............................kmeans__n_clusters=98; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=98; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=98; total time=   2.2s\n",
      "[CV] END ..............................kmeans__n_clusters=99; total time=   1.9s\n",
      "[CV] END ..............................kmeans__n_clusters=99; total time=   1.8s\n",
      "[CV] END ..............................kmeans__n_clusters=99; total time=   1.8s\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-10 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-10 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-10 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-10 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-10 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-10 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-10 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-10 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-10 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-10 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-10 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-10 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-10 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-10 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-10 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-10 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3,\n",
       "             estimator=Pipeline(steps=[(&#x27;kmeans&#x27;,\n",
       "                                        KMeans(n_clusters=50,\n",
       "                                               random_state=100)),\n",
       "                                       (&#x27;log_reg&#x27;,\n",
       "                                        LogisticRegression(max_iter=5000,\n",
       "                                                           multi_class=&#x27;ovr&#x27;,\n",
       "                                                           random_state=100))]),\n",
       "             param_grid={&#x27;kmeans__n_clusters&#x27;: range(2, 100)}, verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GridSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=3,\n",
       "             estimator=Pipeline(steps=[(&#x27;kmeans&#x27;,\n",
       "                                        KMeans(n_clusters=50,\n",
       "                                               random_state=100)),\n",
       "                                       (&#x27;log_reg&#x27;,\n",
       "                                        LogisticRegression(max_iter=5000,\n",
       "                                                           multi_class=&#x27;ovr&#x27;,\n",
       "                                                           random_state=100))]),\n",
       "             param_grid={&#x27;kmeans__n_clusters&#x27;: range(2, 100)}, verbose=2)</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">estimator: Pipeline</label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;kmeans&#x27;, KMeans(n_clusters=50, random_state=100)),\n",
       "                (&#x27;log_reg&#x27;,\n",
       "                 LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;,\n",
       "                                    random_state=100))])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(n_clusters=50, random_state=100)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;, random_state=100)</pre></div> </div></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "GridSearchCV(cv=3,\n",
       "             estimator=Pipeline(steps=[('kmeans',\n",
       "                                        KMeans(n_clusters=50,\n",
       "                                               random_state=100)),\n",
       "                                       ('log_reg',\n",
       "                                        LogisticRegression(max_iter=5000,\n",
       "                                                           multi_class='ovr',\n",
       "                                                           random_state=100))]),\n",
       "             param_grid={'kmeans__n_clusters': range(2, 100)}, verbose=2)"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "param_grid = dict(kmeans__n_clusters=range(2, 100))\n",
    "grid_clf = GridSearchCV(pipeline, param_grid, cv=3, verbose=2)\n",
    "grid_clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6a88ff4-9c74-48b5-a769-7378b77a16e7",
   "metadata": {},
   "source": [
    "Let's see what the best number of clusters is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "6a09468a-20a2-4b50-a4de-781499bbcb9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'kmeans__n_clusters': 67}"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid_clf.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "e6cc54b6-5d08-4280-819a-cd9caa445576",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9822222222222222"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid_clf.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff1f85bc-7499-463b-8869-e493f67341fa",
   "metadata": {},
   "source": [
    "## Using Clustering for Semi-Supervised Learning"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6e0a4f0-d351-42fb-aa15-d576192379cf",
   "metadata": {},
   "source": [
    "Another use case for clustering is in semi-supervised learning, when we have plenty of unlabeled instances and very few labeled instances."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5552aaf8-21d3-43ad-96fa-459773c19995",
   "metadata": {},
   "source": [
    "Let's look at the performance of a logistic regression model when we only have 50 labeled instances:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "aaf2755b-5958-4e71-9c17-c0cf835f16eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "n_labeled = 50"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "07e07a7d-c4f1-4f76-b7a6-3f50d006f290",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8555555555555555"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg = LogisticRegression(multi_class=\"ovr\", solver=\"lbfgs\", random_state=100)\n",
    "log_reg.fit(X_train[:n_labeled], y_train[:n_labeled])\n",
    "log_reg.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d21851e7-5f2a-407a-9683-af3ff143819d",
   "metadata": {},
   "source": [
    "It's much less than earlier of course. Let's see how we can do better. First, let's cluster the training set into 50 clusters, then for each cluster let's find the image closest to the centroid. We will call these images the representative images:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "a3f4b5a0-9b82-462e-a3a7-b2f45018c789",
   "metadata": {},
   "outputs": [],
   "source": [
    "k = 50"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "3e745609-4a19-4e77-9a69-c83ba81346b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "kmeans = KMeans(n_clusters=k, random_state=100)\n",
    "X_digits_dist = kmeans.fit_transform(X_train)\n",
    "representative_digit_idx = np.argmin(X_digits_dist, axis=0)\n",
    "X_representative_digits = X_train[representative_digit_idx]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c48f98e-6ba1-4e1a-aa88-fefcf8f85118",
   "metadata": {},
   "source": [
    "Now let's plot these representative images and label them manually:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "88f480c0-d980-4b45-8847-e9a4388acf77",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure representative_images_diagram\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x200 with 50 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 2))\n",
    "for index, X_representative_digit in enumerate(X_representative_digits):\n",
    "    plt.subplot(k//10, 10, index+1)\n",
    "    plt.imshow(X_representative_digit.reshape(8, 8), cmap=\"binary\", interpolation=\"bilinear\")\n",
    "    plt.axis('off')\n",
    "    \n",
    "save_fig(\"representative_images_diagram\", tight_layout=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "fa249309-2a21-488d-89a0-5e3f241bfa63",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([5, 3, 6, 1, 3, 7, 7, 4, 0, 1, 2, 8, 5, 1, 2, 9, 2, 4, 7, 5, 4, 1,\n",
       "       3, 3, 9, 0, 7, 8, 5, 1, 8, 6, 8, 5, 1, 0, 7, 1, 9, 4, 7, 3, 7, 9,\n",
       "       6, 5, 2, 8, 3, 9])"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train[representative_digit_idx]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "8b1a75b0-a750-4c54-9bcb-6b9c83a522fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_representative_digits = np.array([\n",
    "    0, 1, 3, 2, 7, 6, 4, 6, 9, 5,\n",
    "    1, 2, 9, 5, 2, 7, 8, 1, 8, 6,\n",
    "    3, 2, 5, 4, 5, 4, 0, 3, 2, 6,\n",
    "    1, 7, 7, 9, 1, 8, 6, 5, 4, 8,\n",
    "    5, 3, 3, 6, 7, 9, 7, 8, 4, 9])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5417a500-5076-4814-987d-0cd1f4c9a226",
   "metadata": {},
   "source": [
    "Now we have a dataset with just 50 labeled instances, but instead of being completely random instances, each of them is a representative image of its cluster. Let's see if the performance is any better:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "2d6936af-22b7-4911-93b4-8476b29f66dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.06444444444444444"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg = LogisticRegression(multi_class=\"ovr\", solver=\"lbfgs\", max_iter=5000, random_state=100)\n",
    "log_reg.fit(X_representative_digits, y_representative_digits)\n",
    "log_reg.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5d50c58-3f31-47f4-b9bb-72be4163ef0b",
   "metadata": {},
   "source": [
    "Wow! We jumped from 83.3% accuracy to 91.3%, although we are still only training the model on 50 instances. Since it's often costly and painful to label instances, especially when it has to be done manually by experts, it's a good idea to make them label representative instances rather than just random instances."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c61db865-d79d-4e2f-a6c8-1612d54c69cd",
   "metadata": {},
   "source": [
    "But perhaps we can go one step further: what if we propagated the labels to all the other instances in the same cluster?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "690485a2-a040-41de-ac10-f81f44850750",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train_propagated = np.empty(len(X_train), dtype=np.int32)\n",
    "for i in range(k):\n",
    "    y_train_propagated[kmeans.labels_==i] = y_representative_digits[i]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "76588984-2722-410e-99f7-7c8199426f2d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-11 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-11 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-11 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-11 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-11 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-11 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-11 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-11 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-11 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-11 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-11 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-11 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-11 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-11 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-11 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-11 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" checked><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(max_iter=5000, multi_class='ovr', random_state=100)"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg = LogisticRegression(multi_class=\"ovr\", solver=\"lbfgs\", max_iter=5000, random_state=100)\n",
    "log_reg.fit(X_train, y_train_propagated)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "9f559c70-6dd3-4a29-9ed6-690e3cab9dd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.1"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bc24595-009b-45bd-b40d-7e92627f03d7",
   "metadata": {},
   "source": [
    "We got a tiny little accuracy boost. Better than nothing, but we should probably have propagated the labels only to the instances closest to the centroid, because by propagating to the full cluster, we have certainly included some outliers. Let's only propagate the labels to the 75th percentile closest to the centroid:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "9db98bc3-bed7-4fc9-8469-f1ce38cafadc",
   "metadata": {},
   "outputs": [],
   "source": [
    "percentile_closest = 75\n",
    "\n",
    "X_cluster_dist = X_digits_dist[np.arange(len(X_train)), kmeans.labels_]\n",
    "for i in range(k):\n",
    "    in_cluster = (kmeans.labels_ == i)\n",
    "    cluster_dist = X_cluster_dist[in_cluster]\n",
    "    cutoff_distance = np.percentile(cluster_dist, percentile_closest)\n",
    "    above_cutoff = (X_cluster_dist > cutoff_distance)\n",
    "    X_cluster_dist[in_cluster & above_cutoff] = -1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "9f182194-5eb0-4505-b2d8-fc5e62d15e55",
   "metadata": {},
   "outputs": [],
   "source": [
    "partially_propagated = (X_cluster_dist != -1)\n",
    "X_train_partially_propagated = X_train[partially_propagated]\n",
    "y_train_partially_propagated = y_train_propagated[partially_propagated]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "1dddd945-0195-428a-bf51-3e1f630a63db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-12 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-12 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-12 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-12 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-12 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-12 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-12 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-12 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-12 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-12 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-12 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-12 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-12 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-12 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-12 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-12 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" checked><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(max_iter=5000, multi_class=&#x27;ovr&#x27;, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(max_iter=5000, multi_class='ovr', random_state=100)"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg = LogisticRegression(multi_class=\"ovr\", solver=\"lbfgs\", max_iter=5000, random_state=100)\n",
    "log_reg.fit(X_train_partially_propagated, y_train_partially_propagated)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "5f06fc3e-c8c5-4eae-be59-fac357afa8f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.10444444444444445"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "187ff5ab-e494-4607-8bf8-5a590993ebf1",
   "metadata": {},
   "source": [
    "A bit better. With just 50 labeled instances (just 5 examples per class on average!), we got 92.7% performance, which is getting closer to the performance of logistic regression on the fully labeled _digits_ dataset (which was 96.9%)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca01018b-6207-4afe-96a0-a86c64dae2c9",
   "metadata": {},
   "source": [
    "This is because the propagated labels are actually pretty good: their accuracy is close to 96%:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "4cceacdc-887a-405a-b954-113ee32a523b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.10956175298804781"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(y_train_partially_propagated == y_train[partially_propagated])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f4e65be-ab9b-41a7-ba0c-4856a8698b7d",
   "metadata": {},
   "source": [
    "You could now do a few iterations of *active learning*:\n",
    "1. Manually label the instances that the classifier is least sure about, if possible by picking them in distinct clusters.\n",
    "2. Train a new model with these additional labels."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2159f47a-ba57-4eec-902f-a6b380634da7",
   "metadata": {},
   "source": [
    "## DBSCAN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "fbb183d9-ac1b-4f6c-8638-cdec4b541bae",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import make_moons"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "3b1b93cf-a583-4fc4-bc19-3853fe98eb17",
   "metadata": {},
   "outputs": [],
   "source": [
    "X, y = make_moons(n_samples=1000, noise=0.05, random_state=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "a795f8c3-0def-4916-89b8-f76be1afc493",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import DBSCAN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "608d715a-1518-4805-962d-051c272cd166",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-13 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-13 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-13 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-13 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-13 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-13 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-13 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-13 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-13 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-13 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-13 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-13 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-13 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-13 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-13 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-13 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-13 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-13 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-13 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-13\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DBSCAN(eps=0.05)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" checked><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DBSCAN<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.DBSCAN.html\">?<span>Documentation for DBSCAN</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DBSCAN(eps=0.05)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "DBSCAN(eps=0.05)"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dbscan = DBSCAN(eps=0.05, min_samples=5)\n",
    "dbscan.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "26fdf30c-c44b-4363-8907-975980c5b952",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0, -1,  2,  1,  2,  3, -1,  2,  4,  4])"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dbscan.labels_[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "14769ef5-d836-4ff5-803b-9b28e2013bbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "795"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(dbscan.core_sample_indices_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "4f5e02ef-608f-4eae-868d-e0665227911c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0,  3,  4,  5,  7,  8,  9, 10, 11, 12])"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dbscan.core_sample_indices_[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "a4e4e154-549a-42a0-bcef-b9beed9fd84b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.00236654,  1.01818585],\n",
       "       [-0.8479176 ,  0.50061467],\n",
       "       [ 0.09252892,  0.08938993]])"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dbscan.components_[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "4c97f25f-0cde-49a4-ac2f-ae8749a22efd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-1,  0,  1,  2,  3,  4,  5,  6,  7,  8])"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.unique(dbscan.labels_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "15d843a1-03cc-45e7-99e3-aee0057c9447",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-14 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-14 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-14 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-14 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-14 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-14 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-14 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-14 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-14 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-14 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-14 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-14 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-14 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-14 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-14 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-14 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-14 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-14 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-14 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-14\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DBSCAN(eps=0.2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" checked><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DBSCAN<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.DBSCAN.html\">?<span>Documentation for DBSCAN</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DBSCAN(eps=0.2)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "DBSCAN(eps=0.2)"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dbscan2 = DBSCAN(eps=0.2)\n",
    "dbscan2.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "7baa47a8-f539-43d1-b88c-aa007398910a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_dbscan(dbscan, X, size, show_xlabels=True, show_ylabels=True):\n",
    "    core_mask = np.zeros_like(dbscan.labels_, dtype=bool)\n",
    "    core_mask[dbscan.core_sample_indices_] = True\n",
    "    anomalies_mask = dbscan.labels_ == -1\n",
    "    non_core_mask = ~(core_mask | anomalies_mask)\n",
    "\n",
    "    cores = dbscan.components_\n",
    "    anomalies = X[anomalies_mask]\n",
    "    non_cores = X[non_core_mask]\n",
    "    \n",
    "    plt.scatter(cores[:, 0], cores[:, 1],\n",
    "                c=dbscan.labels_[core_mask], marker='o', s=size, cmap=\"Paired\")\n",
    "    plt.scatter(cores[:, 0], cores[:, 1], marker='*', s=20, c=dbscan.labels_[core_mask])\n",
    "    plt.scatter(anomalies[:, 0], anomalies[:, 1],\n",
    "                c=\"r\", marker=\"x\", s=100)\n",
    "    plt.scatter(non_cores[:, 0], non_cores[:, 1], c=dbscan.labels_[non_core_mask], marker=\".\")\n",
    "    if show_xlabels:\n",
    "        plt.xlabel(\"$x_1$\", fontsize=14)\n",
    "    else:\n",
    "        plt.tick_params(labelbottom=False)\n",
    "    if show_ylabels:\n",
    "        plt.ylabel(\"$x_2$\", fontsize=14, rotation=0)\n",
    "    else:\n",
    "        plt.tick_params(labelleft=False)\n",
    "    plt.title(\"eps={:.2f}, min_samples={}\".format(dbscan.eps, dbscan.min_samples), fontsize=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "cdb6cb45-52bb-4336-af54-deb83f59db8d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure dbscan_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x320 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9, 3.2))\n",
    "\n",
    "plt.subplot(121)\n",
    "plot_dbscan(dbscan, X, size=100)\n",
    "\n",
    "plt.subplot(122)\n",
    "plot_dbscan(dbscan2, X, size=600, show_ylabels=False)\n",
    "\n",
    "save_fig(\"dbscan_plot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "dddb054b-eca2-4d33-a6f2-5f594005b52b",
   "metadata": {},
   "outputs": [],
   "source": [
    "dbscan = dbscan2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "794ad109-3e16-4c0e-9711-05dcab21447e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "df954678-9f7c-4f76-bafc-f00e8548cc23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-15 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-15 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-15 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-15 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-15 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-15 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-15 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-15 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-15 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-15 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-15 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-15 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-15 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-15 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-15 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-15 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-15 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-15 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-15 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-15\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=50)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" checked><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier(n_neighbors=50)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier(n_neighbors=50)"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn = KNeighborsClassifier(n_neighbors=50)\n",
    "knn.fit(dbscan.components_, dbscan.labels_[dbscan.core_sample_indices_])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "f958f704-323f-44a1-9ce5-e5cb6d1502d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 0, 1])"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_new = np.array([[-0.5, 0], [0, 0.5], [1, -0.1], [2, 1]])\n",
    "knn.predict(X_new)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "2491bec2-f13e-4faf-bd37-58a0f2bef1d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.78, 0.22],\n",
       "       [0.  , 1.  ],\n",
       "       [0.82, 0.18],\n",
       "       [0.  , 1.  ]])"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn.predict_proba(X_new)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "d4187b1f-3d37-4931-8b70-b61a3c6ee2ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/53967142.py:25: UserWarning: linewidths is ignored by contourf\n",
      "  plt.contourf(Z, extent=(mins[0], maxs[0], mins[1], maxs[1]),\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure cluster_classification_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 3))\n",
    "plot_decision_boundaries(knn, X, show_centroids=False)\n",
    "plt.scatter(X_new[:, 0], X_new[:, 1], c=\"b\", marker=\"+\", s=200, zorder=10)\n",
    "save_fig(\"cluster_classification_plot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "b271d3d8-9e9a-4785-a454-5b15dfad5b2a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-1,  1,  0, -1])"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_dist, y_pred_idx = knn.kneighbors(X_new, n_neighbors=1)\n",
    "y_pred = dbscan.labels_[dbscan.core_sample_indices_][y_pred_idx]\n",
    "y_pred[y_dist > 0.2] = -1\n",
    "y_pred.ravel()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2b25779-39de-4124-af8c-b1829aa0be45",
   "metadata": {},
   "source": [
    "## Other Clustering Algorithms"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84c810e8-ead8-4916-86bf-276773d933a1",
   "metadata": {},
   "source": [
    "### Spectral Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "6ab5b7fb-d64e-494a-a637-c9cf3b6653e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import SpectralClustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "bca3258c-6eb5-4957-8ffb-138dae616b2e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-16 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-16 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-16 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-16 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-16 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-16 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-16 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-16 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-16 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-16 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-16 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-16 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-16 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-16 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-16 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-16 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-16 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-16 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-16 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-16\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SpectralClustering(gamma=100, n_clusters=2, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" checked><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SpectralClustering<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.SpectralClustering.html\">?<span>Documentation for SpectralClustering</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SpectralClustering(gamma=100, n_clusters=2, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SpectralClustering(gamma=100, n_clusters=2, random_state=100)"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sc1 = SpectralClustering(n_clusters=2, gamma=100, random_state=100)\n",
    "sc1.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "ac1b736b-99e0-45dd-9470-45656b3793ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-17 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-17 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-17 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-17 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-17 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-17 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-17 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-17 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-17 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-17 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-17 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-17 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-17 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-17 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-17 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-17 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-17 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-17\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SpectralClustering(gamma=1, n_clusters=2, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" checked><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SpectralClustering<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.cluster.SpectralClustering.html\">?<span>Documentation for SpectralClustering</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SpectralClustering(gamma=1, n_clusters=2, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SpectralClustering(gamma=1, n_clusters=2, random_state=100)"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sc2 = SpectralClustering(n_clusters=2, gamma=1, random_state=100)\n",
    "sc2.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "9d3c6112-bedc-4b4b-8a61-b2b19f576766",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.04207532565939928"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.percentile(sc1.affinity_matrix_, 95)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "ed22bcbd-a520-4d4a-86ad-8809feb678b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_spectral_clustering(sc, X, size, alpha, show_xlabels=True, show_ylabels=True):\n",
    "    plt.scatter(X[:, 0], X[:, 1], marker='o', s=size, c='gray', cmap=\"Paired\", alpha=alpha)\n",
    "    plt.scatter(X[:, 0], X[:, 1], marker='o', s=30, c='w')\n",
    "    plt.scatter(X[:, 0], X[:, 1], marker='.', s=10, c=sc.labels_, cmap=\"Paired\")\n",
    "    \n",
    "    if show_xlabels:\n",
    "        plt.xlabel(\"$x_1$\", fontsize=14)\n",
    "    else:\n",
    "        plt.tick_params(labelbottom=False)\n",
    "    if show_ylabels:\n",
    "        plt.ylabel(\"$x_2$\", fontsize=14, rotation=0)\n",
    "    else:\n",
    "        plt.tick_params(labelleft=False)\n",
    "    plt.title(\"RBF gamma={}\".format(sc.gamma), fontsize=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "2363ea69-3c96-45e5-b178-f43c1495686a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/2175278809.py:2: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored\n",
      "  plt.scatter(X[:, 0], X[:, 1], marker='o', s=size, c='gray', cmap=\"Paired\", alpha=alpha)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x320 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9, 3.2))\n",
    "\n",
    "plt.subplot(121)\n",
    "plot_spectral_clustering(sc1, X, size=500, alpha=0.1)\n",
    "\n",
    "plt.subplot(122)\n",
    "plot_spectral_clustering(sc2, X, size=4000, alpha=0.01, show_ylabels=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6dbee8e0-726a-4c02-9f17-47a0c70580d5",
   "metadata": {},
   "source": [
    "### Agglomerative Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "52765162-c10d-430f-a6a6-7ae36ff82153",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import AgglomerativeClustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "59496698-5222-41a3-bc25-cbc68f985e15",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = np.array([0, 2, 5, 8.5]).reshape(-1, 1)\n",
    "agg = AgglomerativeClustering(linkage=\"complete\").fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "fb587746-f7a8-4248-90a0-6a79b273d8bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "def learned_parameters(estimator):\n",
    "    return [attrib for attrib in dir(estimator)\n",
    "            if attrib.endswith(\"_\") and not attrib.startswith(\"_\")]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "388598c9-50c0-4153-8b09-c3781eecf12e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['children_',\n",
       " 'labels_',\n",
       " 'n_clusters_',\n",
       " 'n_connected_components_',\n",
       " 'n_features_in_',\n",
       " 'n_leaves_']"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "learned_parameters(agg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "55b618cd-b3b5-406e-9cd1-95525b777809",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 1],\n",
       "       [2, 3],\n",
       "       [4, 5]])"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "agg.children_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dbd7abf3-af4d-4003-8c47-044132d6822a",
   "metadata": {},
   "source": [
    "# Gaussian Mixtures"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "6f5a9353-935a-4c11-886f-618fe8471a7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "X1, y1 = make_blobs(n_samples=1000, centers=((4, -4), (0, 0)), random_state=100)\n",
    "X1 = X1.dot(np.array([[0.374, 0.95], [0.732, 0.598]]))\n",
    "X2, y2 = make_blobs(n_samples=250, centers=1, random_state=100)\n",
    "X2 = X2 + [6, -8]\n",
    "X = np.r_[X1, X2]\n",
    "y = np.r_[y1, y2]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c785e00-fe4d-4fb1-83e6-95700ff0999b",
   "metadata": {},
   "source": [
    "Let's train a Gaussian mixture model on the previous dataset:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "cf79b400-4a8d-486c-ac3a-01b90006bba5",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.mixture import GaussianMixture"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "5593eb55-a213-4c0c-a886-9e2051c55b09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-18 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-18 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-18 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-18 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-18 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-18 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-18 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-18 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-18 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-18 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-18 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-18 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-18 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-18 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-18 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-18 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-18 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-18 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-18 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-18\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianMixture(n_components=3, n_init=10, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-23\" type=\"checkbox\" checked><label for=\"sk-estimator-id-23\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GaussianMixture<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.mixture.GaussianMixture.html\">?<span>Documentation for GaussianMixture</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GaussianMixture(n_components=3, n_init=10, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "GaussianMixture(n_components=3, n_init=10, random_state=100)"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm = GaussianMixture(n_components=3, n_init=10, random_state=100)\n",
    "gm.fit(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42f36388-31d1-4438-acd7-15da706a588e",
   "metadata": {},
   "source": [
    "Let's look at the parameters that the EM algorithm estimated:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "ee85e6eb-26e2-49ae-b1c6-b9fb53b8da95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.39934193, 0.2       , 0.40065807])"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.weights_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "ff3a97d9-63df-457d-a7d7-73b8670db79d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 5.59885465e-03,  2.12623488e-02],\n",
       "       [ 6.91362920e+00, -1.24712216e+01],\n",
       "       [-1.46238204e+00,  1.39030641e+00]])"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.means_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "e38bc57b-6192-4ef3-a381-ed39e203a0c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[ 0.73043935,  0.85353487],\n",
       "        [ 0.85353487,  1.30793288]],\n",
       "\n",
       "       [[ 1.12280151, -0.05123713],\n",
       "        [-0.05123713,  1.01600069]],\n",
       "\n",
       "       [[ 0.70039651,  0.81863006],\n",
       "        [ 0.81863006,  1.33965977]]])"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.covariances_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bca9b290-bcef-4589-be7a-e4578a783928",
   "metadata": {},
   "source": [
    "Did the algorithm actually converge?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "9764d1c6-c2a5-4085-be41-c79e52b0a685",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.converged_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a7d55d7-9c0e-4098-bfa8-61c0d47ceda1",
   "metadata": {},
   "source": [
    "Yes, good. How many iterations did it take?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "0577e76f-cd9f-41a1-9613-c0f63b0acd9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.n_iter_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32b84410-2e9a-49e7-b776-49d2b6a6ff25",
   "metadata": {},
   "source": [
    "You can now use the model to predict which cluster each instance belongs to (hard clustering) or the probabilities that it came from each cluster. For this, just use `predict()` method or the `predict_proba()` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "391bea29-6edd-47a2-bae5-394910357627",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 2, 2, ..., 1, 1, 1])"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.predict(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "fcf231c5-5645-465e-9c57-95d4e9aebe90",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[5.27644877e-009, 2.12316801e-056, 9.99999995e-001],\n",
       "       [2.80596077e-008, 1.19870080e-053, 9.99999972e-001],\n",
       "       [2.62702078e-008, 6.58070096e-055, 9.99999974e-001],\n",
       "       ...,\n",
       "       [2.85772848e-241, 1.00000000e+000, 1.58756278e-274],\n",
       "       [4.02496278e-278, 1.00000000e+000, 1.16407071e-308],\n",
       "       [0.00000000e+000, 1.00000000e+000, 0.00000000e+000]])"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.predict_proba(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3bf40903-61ef-4ca3-993e-1d71ab3dbaa1",
   "metadata": {},
   "source": [
    "This is a generative model, so you can sample new instances from it (and get their labels):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "24953048-bd56-48c4-8c5b-b96f96afa8d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ -0.85525562,  -1.3275887 ],\n",
       "       [ -0.93066229,  -0.98064779],\n",
       "       [  6.29587239, -13.37345934],\n",
       "       [ -1.39422375,   1.65997621],\n",
       "       [ -1.24141301,   2.00371471],\n",
       "       [ -1.2622516 ,   2.22749461]])"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_new, y_new = gm.sample(6)\n",
    "X_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "68c5f271-89bb-4419-932f-9966e4415508",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 1, 2, 2, 2])"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_new"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9e50f3fc-b423-4c0c-b754-8a7be73162df",
   "metadata": {},
   "source": [
    "Notice that they are sampled sequentially from each cluster."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2159f7d9-af11-4a18-b429-d884408a1602",
   "metadata": {},
   "source": [
    "You can also estimate the log of the _probability density function_ (PDF) at any location using the `score_samples()` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "8416bcf4-bac4-4b35-93e3-df808a50b8b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-2.24084901, -2.10674846, -2.11956073, ..., -6.80002653,\n",
       "       -3.72516994, -3.68786785])"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.score_samples(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "333812cb-5121-4892-b7bd-1527f8bb5369",
   "metadata": {},
   "source": [
    "Let's check that the PDF integrates to 1 over the whole space. We just take a large square around the clusters, and chop it into a grid of tiny squares, then we compute the approximate probability that the instances will be generated in each tiny square (by multiplying the PDF at one corner of the tiny square by the area of the square), and finally summing all these probabilities). The result is very close to 1:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "ca9cc464-7c6f-41c3-813c-5936cef05846",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8014398880595053"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "resolution = 100\n",
    "grid = np.arange(-10, 10, 1 / resolution)\n",
    "xx, yy = np.meshgrid(grid, grid)\n",
    "X_full = np.vstack([xx.ravel(), yy.ravel()]).T\n",
    "\n",
    "pdf = np.exp(gm.score_samples(X_full))\n",
    "pdf_probas = pdf * (1/resolution)**2\n",
    "pdf_probas.sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dfcbb9ad-b6be-4e35-9264-cc7ad655b06d",
   "metadata": {},
   "source": [
    "Now let's plot the resulting decision boundaries (dashed lines) and density contours:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "0cd8dc61-7932-49b3-a7f3-e911f8dfa91d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib.colors import LogNorm\n",
    "\n",
    "def plot_gaussian_mixture(clusterer, X, resolution=1000, show_ylabels=True):\n",
    "    mins = X.min(axis=0) - 0.1\n",
    "    maxs = X.max(axis=0) + 0.1\n",
    "    xx, yy = np.meshgrid(np.linspace(mins[0], maxs[0], resolution),\n",
    "                         np.linspace(mins[1], maxs[1], resolution))\n",
    "    Z = -clusterer.score_samples(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    \n",
    "    plt.contourf(xx, yy, Z,\n",
    "                 norm=LogNorm(vmin=1.0, vmax=30.0),\n",
    "                 levels=np.logspace(0, 2, 12))\n",
    "    plt.contourf(xx, yy, Z,\n",
    "                 norm=LogNorm(vmin=1.0, vmax=30.0),\n",
    "                 levels=np.logspace(0, 2, 12))\n",
    "    plt.contourf(xx, yy, Z,\n",
    "                 norm=LogNorm(vmin=1.0, vmax=30.0),\n",
    "                 levels=np.logspace(0, 2, 12),\n",
    "                 linewidth=1, colors='k')\n",
    "    \n",
    "    Z = clusterer.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    plt.contourf(xx, yy, Z,\n",
    "                 linewidth=2, colors='r', linestyles='dashed')\n",
    "    \n",
    "    plt.plot(X[:, 0], X[:, 1], 'k', markersize=2)\n",
    "    plot_centroids(clusterer.means_, clusterer.weights_)\n",
    "    \n",
    "    plt.xlabel(\"$x_1$\", fontsize=14)\n",
    "    if show_ylabels:\n",
    "        plt.ylabel(\"$x_2$\", fontsize=14, rotation=0)\n",
    "    else:\n",
    "        plt.tick_params(labelleft=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "5d1b7fad-b6e7-40c1-858a-dab896834d4b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure gaussian_mixture_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 4))\n",
    "\n",
    "plot_gaussian_mixture(gm, X)\n",
    "\n",
    "save_fig(\"gaussian_mixture_plot\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed8e7c77-0910-4b64-a11c-061d9de519c0",
   "metadata": {},
   "source": [
    "You can impose constraints on the covariance matrices that the algorithm looks for by setting the `covariance_type` hyperparameter:\n",
    "* `\"full\"` (default): no constraint, all clusters can take on any ellipsoidal shape of any size.\n",
    "* `\"tied\"`: all clusters must have the same shape, which can be any ellipsoid (i.e., they all share the same covariance matrix).\n",
    "* `\"spherical\"`: all clusters must be spherical, but they can have different diameters (i.e., different variances).\n",
    "* `\"diag\"`: clusters can take on any ellipsoidal shape of any size, but the ellipsoid's axes must be parallel to the axes (i.e., the covariance matrices must be diagonal)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "16a92514-292c-4186-bc35-27b988abcbe8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-19 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-19 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-19 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-19 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-19 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-19 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-19 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-19 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-19 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-19 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-19 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-19 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-19 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-19 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-19 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-19 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-19 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-19\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianMixture(covariance_type=&#x27;diag&#x27;, n_components=3, n_init=10,\n",
       "                random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-24\" type=\"checkbox\" checked><label for=\"sk-estimator-id-24\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GaussianMixture<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.mixture.GaussianMixture.html\">?<span>Documentation for GaussianMixture</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GaussianMixture(covariance_type=&#x27;diag&#x27;, n_components=3, n_init=10,\n",
       "                random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "GaussianMixture(covariance_type='diag', n_components=3, n_init=10,\n",
       "                random_state=100)"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm_full = GaussianMixture(n_components=3, n_init=10, covariance_type=\"full\", random_state=100)\n",
    "gm_tied = GaussianMixture(n_components=3, n_init=10, covariance_type=\"tied\", random_state=100)\n",
    "gm_spherical = GaussianMixture(n_components=3, n_init=10, covariance_type=\"spherical\", random_state=100)\n",
    "gm_diag = GaussianMixture(n_components=3, n_init=10, covariance_type=\"diag\", random_state=100)\n",
    "gm_full.fit(X)\n",
    "gm_tied.fit(X)\n",
    "gm_spherical.fit(X)\n",
    "gm_diag.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "ab40fb51-670f-4cab-9a3a-6baf67acd546",
   "metadata": {},
   "outputs": [],
   "source": [
    "def compare_gaussian_mixtures(gm1, gm2, X):\n",
    "    plt.figure(figsize=(9, 4))\n",
    "    \n",
    "    plt.subplot(121)\n",
    "    plot_gaussian_mixture(gm1, X)\n",
    "    plt.title('covarinace_type=\"{}\"'.format(gm1.covariance_type), fontsize=14)\n",
    "    \n",
    "    plt.subplot(122)\n",
    "    plot_gaussian_mixture(gm2, X, show_ylabels=False)\n",
    "    plt.title('covarinace_type=\"{}\"'.format(gm2.covariance_type), fontsize=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "2b382384-6310-4629-9095-3aa372c49ec9",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure covariance_type_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "compare_gaussian_mixtures(gm_tied, gm_spherical, X)\n",
    "\n",
    "save_fig(\"covariance_type_plot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "e0e2e21d-f051-4c9b-a6c6-3fe1bb104f5d",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "compare_gaussian_mixtures(gm_full, gm_diag, X)\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0131754a-da63-48f0-823e-51ec539545e4",
   "metadata": {},
   "source": [
    "## Anomaly Detection Using Gaussian Mixtures"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4552f62a-29d3-4f50-8932-8022689e84a9",
   "metadata": {},
   "source": [
    "Gaussian Mixtures can be used for _anomaly detection_: instances located in low-density regions can be considered anomalies. You must define what density threshold you want to use. For example, in a manufacturing company that tries to detect defective products, the ratio of defective products is usually well-known. Say it is equal to 4%, then you can set the density threshold to be the value that results in having 4% of the instances located in areas below that threshold density:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "7046414b-aa08-4e8a-a7bd-339b353413ee",
   "metadata": {},
   "outputs": [],
   "source": [
    "densities = gm.score_samples(X)\n",
    "density_threshold = np.percentile(densities, 4)\n",
    "anomalies = X[densities < density_threshold]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "e57a2e31-2996-4f3f-ba31-eb7b26222184",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure mixture_anomaly_detection_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 4))\n",
    "\n",
    "plot_gaussian_mixture(gm, X)\n",
    "plt.scatter(anomalies[:, 0], anomalies[:, 1], color='r', marker='*')\n",
    "plt.ylim(top=5.1)\n",
    "\n",
    "save_fig(\"mixture_anomaly_detection_plot\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0130d813-81d9-4921-b21b-27318dd39497",
   "metadata": {},
   "source": [
    "## Selecting the Number of Clusters"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f1d2aa5-1636-4451-aa87-2072b6073e91",
   "metadata": {},
   "source": [
    "We cannot use the inertia or the silhouette score because they both assume that the clusters are spherical. Instead, we can try to find the model that minimizes a theoretical information criterion such as the Bayesian Information Criterion (BIC) or the Akaike Information Criterion (AIC):\n",
    "\n",
    "${BIC} = {\\log(m)p - 2\\log({\\hat L})}$\n",
    "\n",
    "${AIC} = 2p - 2\\log(\\hat L)$\n",
    "\n",
    "* $m$ is the number of instances.\n",
    "* $p$ is the number of parameters learned by the model.\n",
    "* $\\hat L$ is the maximized value of the likelihood function of the model. This is the conditional probability of the observed data $\\mathbf{X}$, given the model and its optimized parameters.\n",
    "\n",
    "Both BIC and AIC penalize models that have more parameters to learn (e.g., more clusters), and reward models that fit the data well (i.e., models that give a high likelihood to the observed data)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "a96184e0-5b96-42aa-87e1-0be7dc1a3046",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8473.859306973573"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.bic(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "ea0fdb43-ba90-41dc-9ca9-5f6cca2de869",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8386.634026858535"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gm.aic(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6585edb-8638-43f8-8165-b650114951b2",
   "metadata": {},
   "source": [
    "We could compute the BIC manually like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "1147f38f-59a5-4d3c-8802-df7654cbb98c",
   "metadata": {},
   "outputs": [],
   "source": [
    "n_clusters = 3\n",
    "n_dims = 2\n",
    "n_params_for_weights = n_clusters - 1\n",
    "n_params_for_means = n_clusters * n_dims\n",
    "n_params_for_covariance = n_clusters * n_dims * (n_dims + 1) // 2\n",
    "n_params = n_params_for_weights + n_params_for_means + n_params_for_covariance\n",
    "max_log_likelihood = gm.score(X) * len(X) # log(L^)\n",
    "bic = np.log(len(X)) * n_params - 2 * max_log_likelihood\n",
    "aic = 2 * n_params - 2 * max_log_likelihood"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "5c83ccaa-b6c4-47c7-9b35-17ca3566d0ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8473.859306973573, 8386.634026858535)"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bic, aic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "a6eab602-761f-4553-9079-bb5c7ec979cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n_params"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "220f97af-be4c-47db-8654-6fa2fef281c5",
   "metadata": {},
   "source": [
    "There's one weight per cluster, but the sum must be equal to 1, so we have one degree of freedom less, hence the -1. Similarly, the degrees of freedom for an $n \\times n$ covariance matrix is not $n^2$, but $1 + 2 + \\dots + n = \\dfrac{n (n+1)}{2}$."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6fb9e81-32da-43df-88fa-1b9ce76df015",
   "metadata": {},
   "source": [
    "Let's train Gaussian Mixture models with various values of $k$ and measure their BIC:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "28acbdde-a022-4781-8872-26c886016008",
   "metadata": {},
   "outputs": [],
   "source": [
    "gms_per_k = [GaussianMixture(n_components=k, n_init=10, random_state=100).fit(X)\n",
    "             for k in range(1, 11)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "d9b6ac4c-d533-4d20-8c32-c1cd6b934f7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "bics = [model.bic(X) for model in gms_per_k]\n",
    "aics = [model.aic(X) for model in gms_per_k]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "3c703e20-ecac-42e6-a86a-2d7dec155937",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure aic_bic_vs_k_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 3))\n",
    "plt.plot(range(1, 11), bics, \"bo-\", label=\"BIC\")\n",
    "plt.plot(range(1, 11), aics, \"go--\", label=\"AIC\")\n",
    "plt.xlabel(\"$k$\", fontsize=14)\n",
    "plt.ylabel(\"Information Criterion\", fontsize=14)\n",
    "plt.axis([1, 9.5, np.min(aics) - 50, np.max(aics) + 50])\n",
    "plt.annotate('Minimum',\n",
    "             xy=(3, bics[2]),\n",
    "             xytext=(0.35, 0.6),\n",
    "             textcoords='figure fraction',\n",
    "             fontsize=14,\n",
    "             arrowprops=dict(facecolor='black', shrink=0.1)\n",
    "            )\n",
    "plt.legend()\n",
    "save_fig(\"aic_bic_vs_k_plot\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56c8456c-19ad-4205-8763-3eb945d17dff",
   "metadata": {},
   "source": [
    "Let's search for best combination of values for both the number of clusters and the `covariance_type` hyperparameter:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "8acae9d9-f9a1-45d7-b9b5-fccdf6f54e7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "min_bic = np.infty\n",
    "\n",
    "for k in range(1, 11):\n",
    "    for covariance_type in (\"full\", \"tied\", \"spherical\", \"diag\"):\n",
    "        bic = GaussianMixture(n_components=k, n_init=10,\n",
    "                              covariance_type=covariance_type,\n",
    "                              random_state=100).fit(X).bic(X)\n",
    "        if bic < min_bic:\n",
    "            min_bic = bic\n",
    "            best_k = k\n",
    "            best_covariance_type = covariance_type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "c0133ecc-d537-47e6-ab1c-e425c0bdc22f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_k"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "539ce6d6-17e8-4d26-a69d-9aba261dc0b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'full'"
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_covariance_type"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0819e6ed-8508-4be6-8ee8-2e4a0839a9ed",
   "metadata": {},
   "source": [
    "## Bayesian Gaussian Mixture Models"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "354f7540-18af-49b2-9f44-ad5fa0f5c9e7",
   "metadata": {},
   "source": [
    "Rather than manually searching for the optimal number of clusters, it is possible to use instead the `BayesianGaussianMixture` class which is capable of giving weights equal (or close) to zero to unnecessary clusters. Just set the number of components to a value that you believe is greater than the optimal number of clusters, and the algorithm will eliminate the unnecessary clusters automatically."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "6da8c59d-0600-47dd-84fc-d39f6bb27066",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.mixture import BayesianGaussianMixture"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "9bed2b4d-94b7-44a0-9c97-ab201d6b4e43",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-20 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-20 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-20 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-20 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-20 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-20 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-20 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-20 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-20 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-20 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-20 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-20 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-20 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-20 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-20 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-20 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-20 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-20 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-20 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-20\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BayesianGaussianMixture(n_components=10, n_init=10, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-25\" type=\"checkbox\" checked><label for=\"sk-estimator-id-25\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;BayesianGaussianMixture<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.mixture.BayesianGaussianMixture.html\">?<span>Documentation for BayesianGaussianMixture</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>BayesianGaussianMixture(n_components=10, n_init=10, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "BayesianGaussianMixture(n_components=10, n_init=10, random_state=100)"
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bgm = BayesianGaussianMixture(n_components=10, n_init=10, random_state=100)\n",
    "bgm.fit(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "afc8bf66-c53e-43c5-aa21-2d4190fd96d2",
   "metadata": {},
   "source": [
    "The algorithm automatically detected that only 3 components are needed:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "4d31c73e-cb74-45ce-b67a-979669da98be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0. , 0.2, 0.4, 0.4, 0. , 0. , 0. , 0. , 0. , 0. ])"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.round(bgm.weights_, 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "08e4adac-1cd6-4881-957c-9374d9807080",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n"
     ]
    },
    {
     "data": {
      "image/png": "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Jp4moSXyhwsF0SIiIpJQXgix3buwiTeVw2GVLu733L/Mc26NmPVMpFg8qomIiIiIRMw7Er0/tiDIVRQH0EOxZcMVQEtlSYogeu3atdx999307NmTevXqkZaWxvTp04Me26NHD9LS0kq03r17h/14L774IgcddBA1a9akbdu2/Pvf/47SMxEREZHy8gbRzYEzsMl4VbAVCR8ksb/6l9STFOkcv/76K6NGjaJt27a0b9+eOXPmlHp8y5YtGTlypN+2Fi1ahPVY48aN4/rrr+f888/nH//4B7NmzeKWW25h+/btDBo0qNzPQURERCrGm87xIFZOrTbwBhZQi1S2pKjOsXXrVnbt2kXDhg15++236dOnD9OmTaNHjx4lju3RowebNm3i559/jvhxduzYQVZWFl26dGHy5MlF2/v168e7777LqlWr2GuvvcK6lqpziIiIRE8BFjTne+43BSbjP/FQJFIVqc6RFOkc9erVo2HDhhGds3v3bnJzcyM6Z9q0afz111/ceOONftsHDBjAtm3bmDJlSkTXExERkehYTXEA3RaYgwJoia+kCKIjtWTJEurUqUO9evVo3rw5//znP9m1a1eZ533//fcAdO7c2W/7EUccQZUqVYr2B5OXl0dOTo5fExERkehoiq1a2Av4CitzJxJPSZETHYn99tuPnj170r59e7Zt28bbb7/Ngw8+yJIlS3jjjTdKPXft2rVUrVqVpk2b+m2vUaMGjRo1Ys2aNSHPHTlyJPfdd1+J7QqlRUREomMuxZMH9f+rRIP3fVSe7OZKD6ILCwvJz88v+0AgPT2dtLTI5tq++OKLfvcvu+wyrr32Wp5//nluv/12unTpEvLcHTt2UKNG8OI4NWvWZMeOHSHPHTx4MP/4xz+K7q9evZqDDz6YrIh6LyIiIiKVbevWrWRkRLZET6UH0TNnzqRnz55hHbto0SLatWtX4ce84447eP755/nss89KDaJr1aoVMsDfuXMntWrVCnlueno66enpRffr1q3LqlWrikrylSYnJ4esrCxWrVoVcVK7hKbXNTb0usaGXtfY0OsaG3pdY0evbWyEel2dc2zdujXsKm6+Kj2IbteuHePHjw/r2MzMzKg8ZlaWjQdv3ry5zMcrKChgw4YNfikd+fn5/PXXXxG9wFWqVKFly5YR9bN+/fr6g4kBva6xodc1NvS6xoZe19jQ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\n",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "plot_gaussian_mixture(bgm, X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "c1f230c7-a83b-43ba-a2fa-68397b72e418",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-21 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-21 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-21 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-21 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-21 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-21 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-21 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-21 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-21 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-21 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-21 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-21 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-21 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-21 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-21 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-21 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-21 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-21 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-21 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-21\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BayesianGaussianMixture(max_iter=1000, n_components=10, random_state=100,\n",
       "                        weight_concentration_prior=10000)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-26\" type=\"checkbox\" checked><label for=\"sk-estimator-id-26\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;BayesianGaussianMixture<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.mixture.BayesianGaussianMixture.html\">?<span>Documentation for BayesianGaussianMixture</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>BayesianGaussianMixture(max_iter=1000, n_components=10, random_state=100,\n",
       "                        weight_concentration_prior=10000)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "BayesianGaussianMixture(max_iter=1000, n_components=10, random_state=100,\n",
       "                        weight_concentration_prior=10000)"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bgm_low = BayesianGaussianMixture(n_components=10, max_iter=1000, n_init=1,\n",
    "                                  weight_concentration_prior=0.01, random_state=100)\n",
    "bgm_high = BayesianGaussianMixture(n_components=10, max_iter=1000, n_init=1,\n",
    "                                  weight_concentration_prior=10000, random_state=100)\n",
    "\n",
    "nn = 73\n",
    "bgm_low.fit(X[:nn])\n",
    "bgm_high.fit(X[:nn])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "c4b9cac6-c8eb-4df8-8e06-bd90c55777d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.41, 0.59, 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  ])"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.round(bgm_low.weights_, 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "16f2cc65-0b44-442a-9685-0c366f3152d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.01, 0.01, 0.36, 0.01, 0.54, 0.01, 0.01, 0.01, 0.01, 0.01])"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.round(bgm_high.weights_, 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "000d2454-273f-48bc-9241-7137c7aa8737",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure mixture_concentration_prior_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9, 4))\n",
    "\n",
    "plt.subplot(121)\n",
    "plot_gaussian_mixture(bgm_low, X[:nn])\n",
    "plt.title(\"weight_concentration_prior = 0.0001\", fontsize=14)\n",
    "\n",
    "plt.subplot(122)\n",
    "plot_gaussian_mixture(bgm_high, X[:nn], show_ylabels=False)\n",
    "plt.title(\"weight_concentration_prior = 10000\", fontsize=14)\n",
    "\n",
    "save_fig(\"mixture_concentration_prior_plot\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "953cda74-219c-4686-9bbc-e9d090da6c11",
   "metadata": {},
   "source": [
    "Note: the fact that you see only 3 regions in the right plot although there are 4 centroids is not a bug. The weight of the top-right cluster is much larger than the weight of the lower-right cluster, so the probability that any given point in this region belongs to the top right cluster is greater than the probability that it belongs to the lower-right cluster."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "aaa0084a-a601-421b-8caa-2c3e3a62fdd6",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_moons, y_moons = make_moons(n_samples=1000, noise=0.05, random_state=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "65a88ec4-c56b-461d-b8ff-11867a94947e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-22 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-22 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-22 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-22 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-22 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-22 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-22 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-22 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-22 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-22 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-22 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-22 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-22 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-22 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-22 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-22 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-22 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-22\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BayesianGaussianMixture(n_components=10, n_init=10, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-27\" type=\"checkbox\" checked><label for=\"sk-estimator-id-27\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;BayesianGaussianMixture<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.mixture.BayesianGaussianMixture.html\">?<span>Documentation for BayesianGaussianMixture</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>BayesianGaussianMixture(n_components=10, n_init=10, random_state=100)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "BayesianGaussianMixture(n_components=10, n_init=10, random_state=100)"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bgm = BayesianGaussianMixture(n_components=10, n_init=10, random_state=100)\n",
    "bgm.fit(X_moons)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "009c91f4-00dc-4e92-9b77-0dca9e67083a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_343/1922527647.py:17: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n",
      "/tmp/ipykernel_343/1922527647.py:24: UserWarning: The following kwargs were not used by contour: 'linewidth'\n",
      "  plt.contourf(xx, yy, Z,\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure moons_vs_bgm_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 900x320 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9, 3.2))\n",
    "\n",
    "plt.subplot(121)\n",
    "plot_data(X_moons)\n",
    "plt.xlabel(\"$x_1$\", fontsize=14)\n",
    "plt.ylabel(\"$x_2$\", fontsize=14, rotation=0)\n",
    "\n",
    "plt.subplot(122)\n",
    "plot_gaussian_mixture(bgm, X_moons, show_ylabels=False)\n",
    "\n",
    "save_fig(\"moons_vs_bgm_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b92d8158-a74d-4da2-8916-842035407fa9",
   "metadata": {},
   "source": [
    "Oops, not great... instead of detecting 2 moon-shaped clusters, the algorithm detected 8 ellipsoidal clusters. However, the density plot does not look too bad, so it might be usable for anomaly detection."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ddc85155-8482-4ffb-94cd-7149899861e4",
   "metadata": {},
   "source": [
    "**Likelihood Function**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "4f35d3b9-2294-4b1a-ba66-be7f10eaab69",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import norm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "8f935584-59ab-420f-b1a2-28bae4899ab9",
   "metadata": {},
   "outputs": [],
   "source": [
    "xx = np.linspace(-6, 4, 101)\n",
    "ss = np.linspace(1, 2, 101)\n",
    "XX, SS = np.meshgrid(xx, ss)\n",
    "ZZ = 2 * norm.pdf(XX - 1.0, 0, SS) + norm.pdf(XX + 4.0, 0, SS)\n",
    "ZZ = ZZ / ZZ.sum(axis=1)[:,np.newaxis] / (xx[1] - xx[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "41fee88d-6efb-4689-ae1e-00c160956150",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure likelihood_function_plot\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x450 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib.patches import Polygon\n",
    "\n",
    "plt.figure(figsize=(8, 4.5))\n",
    "\n",
    "x_idx = 85\n",
    "s_idx = 30\n",
    "\n",
    "plt.subplot(221)\n",
    "plt.contourf(XX, SS, ZZ, cmap=\"GnBu\")\n",
    "plt.plot([-6, 4], [ss[s_idx], ss[s_idx]], \"k-\", linewidth=2)\n",
    "plt.plot([xx[x_idx], xx[x_idx]], [1, 2], \"b-\", linewidth=2)\n",
    "plt.xlabel(r\"$x$\")\n",
    "plt.ylabel(r\"$\\theta$\", fontsize=14, rotation=0)\n",
    "plt.title(r\"Model $f(x; \\theta)$\", fontsize=14)\n",
    "\n",
    "plt.subplot(222)\n",
    "plt.plot(ss, ZZ[:, x_idx], \"b-\")\n",
    "max_idx = np.argmax(ZZ[:, x_idx])\n",
    "max_val = np.max(ZZ[:, x_idx])\n",
    "plt.plot(ss[max_idx], max_val, \"r.\")\n",
    "plt.plot([ss[max_idx], ss[max_idx]], [0, max_val], \"r:\")\n",
    "plt.plot([0, ss[max_idx]], [max_val, max_val], \"r:\")\n",
    "plt.text(1.01, max_val + 0.005, r\"$\\hat{L}$\", fontsize=14)\n",
    "plt.text(ss[max_idx]+ 0.01, 0.055, r\"$\\hat{\\theta}$\", fontsize=14)\n",
    "plt.text(ss[max_idx]+ 0.01, max_val - 0.012, r\"$Max$\", fontsize=12)\n",
    "plt.axis([1, 2, 0.05, 0.15])\n",
    "plt.xlabel(r\"$\\theta$\", fontsize=14)\n",
    "plt.grid(True)\n",
    "plt.text(1.99, 0.135, r\"$=f(x=2.5; \\theta)$\", fontsize=14, ha=\"right\")\n",
    "plt.title(r\"Likelihood function $\\mathcal{L}(\\theta|x=2.5)$\", fontsize=14)\n",
    "\n",
    "plt.subplot(223)\n",
    "plt.plot(xx, ZZ[s_idx], \"k-\")\n",
    "plt.axis([-6, 4, 0, 0.25])\n",
    "plt.xlabel(r\"$x$\", fontsize=14)\n",
    "plt.grid(True)\n",
    "plt.title(r\"PDF $f(x; \\theta=1.3)$\", fontsize=14)\n",
    "verts = [(xx[41], 0)] + list(zip(xx[41:81], ZZ[s_idx, 41:81])) + [(xx[80], 0)]\n",
    "poly = Polygon(verts, facecolor='0.9', edgecolor='0.5')\n",
    "plt.gca().add_patch(poly)\n",
    "\n",
    "plt.subplot(224)\n",
    "plt.plot(ss, np.log(ZZ[:, x_idx]), \"b-\")\n",
    "max_idx = np.argmax(np.log(ZZ[:, x_idx]))\n",
    "max_val = np.max(np.log(ZZ[:, x_idx]))\n",
    "plt.plot(ss[max_idx], max_val, \"r.\")\n",
    "plt.plot([ss[max_idx], ss[max_idx]], [-5, max_val], \"r:\")\n",
    "plt.plot([0, ss[max_idx]], [max_val, max_val], \"r:\")\n",
    "plt.axis([1, 2, -2.4, -2])\n",
    "plt.xlabel(r\"$\\theta$\", fontsize=14)\n",
    "plt.text(ss[max_idx]+ 0.01, max_val - 0.05, r\"$Max$\", fontsize=12)\n",
    "plt.text(ss[max_idx]+ 0.01, -2.39, r\"$\\hat{\\theta}$\", fontsize=14)\n",
    "plt.text(1.01, max_val + 0.02, r\"$\\log \\, \\hat{L}$\", fontsize=14)\n",
    "plt.grid(True)\n",
    "plt.title(r\"$\\log \\, \\mathcal{L}(\\theta|x=2.5)$\", fontsize=14)\n",
    "\n",
    "save_fig(\"likelihood_function_plot\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
